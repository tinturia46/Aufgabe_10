/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm02 = JSIL.DeclareAssembly("Fusee.Base.Imp.Web, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Base");
JSIL.DeclareNamespace("Fusee.Base.Imp");
JSIL.DeclareNamespace("Fusee.Base.Imp.Web");
/* class Fusee.Base.Imp.Web.FontImp */ 

(function FontImp$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0E.System.UInt32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0E.System.Boolean)) ();
  };



  function FontImp_get_PixelHeight () {
    return this.FontImp$PixelHeight$value;
  }; 

  function FontImp_get_UseKerning () {
    return this.FontImp$UseKerning$value;
  }; 







  function FontImp_set_PixelHeight (value) {
    this.FontImp$PixelHeight$value = (value >>> 0);
  }; 

  function FontImp_set_UseKerning (value) {
    this.FontImp$UseKerning$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Object"), 
      Name: "Fusee.Base.Imp.Web.FontImp", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_PixelHeight", 
      JSIL.MethodSignature.Return($.UInt32), 
      FontImp_get_PixelHeight
    )
      .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_UseKerning", 
      JSIL.MethodSignature.Return($.Boolean), 
      FontImp_get_UseKerning
    )
      .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetGlyphCurve", 
      new JSIL.MethodSignature($asm07.TypeRef("Fusee.Math.Core.Curve"), [$.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetGlyphInfo", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.GlyphInfo"), [$.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetKerning", 
      new JSIL.MethodSignature($.Single, [$.UInt32, $.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUnscaledAdvance", 
      new JSIL.MethodSignature($.Single, [$.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUnscaledKerning", 
      new JSIL.MethodSignature($.Single, [$.UInt32, $.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RenderGlyph", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.ImageData"), [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_PixelHeight", 
      JSIL.MethodSignature.Action($.UInt32), 
      FontImp_set_PixelHeight
    )
      .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "set_UseKerning", 
      JSIL.MethodSignature.Action($.Boolean), 
      FontImp_set_UseKerning
    )
      .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FontImp$UseKerning$value", $.Boolean)
      .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm0E.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm0E.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "FontImp$PixelHeight$value", $.UInt32)
      .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm0E.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm0E.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Property({Static:false, Public:true , Virtual:true }, "UseKerning", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PixelHeight", $.UInt32);

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Fusee.Base.Common.IFontImp")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Base.Imp.Web.WebAssetProvider */ 

(function WebAssetProvider$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Fusee.Base.Common.AssetDecoder)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Fusee.Base.Common.AssetChecker)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0E.System.Collections.Generic.Dictionary$b2.Of($asm0E.System.Type, $asm00.Fusee.Base.Common.AssetHandler))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Fusee.Base.Common.AssetHandler)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.Fusee.Base.Imp.Web.WebAssetProvider_$l$gc)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0E.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Fusee.Base.Common.GetCallback)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0E.System.NotImplementedException)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0E.System.Type)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0E.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0E.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0E.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0E.TypeRef("System.Type"), $asm00.TypeRef("Fusee.Base.Common.AssetHandler")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.TypeRef("System.Object"), [$asm0E.TypeRef("System.String"), $asm0E.TypeRef("System.Object")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.TypeRef("System.Boolean"), [$asm0E.TypeRef("System.String")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.TypeRef("System.Object"), [$asm0E.TypeRef("System.String"), $asm0E.TypeRef("System.Object")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.TypeRef("System.Boolean"), [$asm0E.TypeRef("System.String")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0E.TypeRef("System.NotImplementedException"), null))) ();
  };


  function WebAssetProvider__ctor () {
    var arg_4E_1 = null, arg_74_1 = null, arg_BB_1 = null, arg_E1_1 = null;
    this._assetHandlers = $S00().Construct();
    var handler = new ($T03())();
    handler.ReturnedType = $T04().__Type__;
    if ((arg_4E_1 = $T05().$l$g9__1_0) === null) {
      arg_4E_1 = $T05().$l$g9__1_0 = $T00().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm02.Fusee.Base.Imp.Web.WebAssetProvider_$l$gc, "$l_ctor$gb__1_0", $S01(), false, false));
    }
    handler.Decoder = arg_4E_1;
    if ((arg_74_1 = $T05().$l$g9__1_1) === null) {
      arg_74_1 = $T05().$l$g9__1_1 = $T01().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm02.Fusee.Base.Imp.Web.WebAssetProvider_$l$gc, "$l_ctor$gb__1_1", $S02(), false, false));
    }
    handler.Checker = arg_74_1;
    this.RegisterTypeHandler(handler.MemberwiseClone());
    handler = new ($T03())();
    handler.ReturnedType = $T06().__Type__;
    if ((arg_BB_1 = $T05().$l$g9__1_2) === null) {
      arg_BB_1 = $T05().$l$g9__1_2 = $T00().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm02.Fusee.Base.Imp.Web.WebAssetProvider_$l$gc, "$l_ctor$gb__1_2", $S03(), false, false));
    }
    handler.Decoder = arg_BB_1;
    if ((arg_E1_1 = $T05().$l$g9__1_3) === null) {
      arg_E1_1 = $T05().$l$g9__1_3 = $T01().New($T05().$l$g9, null, new JSIL.MethodPointerInfo($asm02.Fusee.Base.Imp.Web.WebAssetProvider_$l$gc, "$l_ctor$gb__1_3", $S04(), false, false));
    }
    handler.Checker = arg_E1_1;
    this.RegisterTypeHandler(handler.MemberwiseClone());
  }; 

  function WebAssetProvider_BeginGetAsset (id, getCallback) {
    throw $S05().Construct();
  }; 

  function WebAssetProvider_CanGet (id, type) {
    var assetHandler = new JSIL.BoxedVariable(new ($T03())());
    var flag = !this.CheckExists(id);
    if (flag) {
      var result = false;
    } else {
      var flag2 = (this._assetHandlers).TryGetValue(type, /* ref */ assetHandler);
      if (flag2) {
        var flag3 = assetHandler.get().Checker(id);
        if (flag3) {
          type = assetHandler.get().ReturnedType;
          result = true;
          return result;
        }
      }
      result = false;
    }
    return result;
  }; 

  function WebAssetProvider_CanHandleType (type) {
    return (this._assetHandlers).ContainsKey(type);
  }; 


  function WebAssetProvider_GetAsset (id, type) {
    var assetHandler = new JSIL.BoxedVariable(new ($T03())());
    var obj = null;
    var rawAsset = this.GetRawAsset(id);
    var flag = rawAsset === null;
    if (flag) {
      var result = null;
    } else {
      var flag2 = (this._assetHandlers).TryGetValue(type, /* ref */ assetHandler);
      if (flag2) {
        var flag3 = (obj = assetHandler.get().Decoder(id, rawAsset)) !== null;
        if (flag3) {
          result = obj;
          return result;
        }
      }
      result = null;
    }
    return result;
  }; 


  function WebAssetProvider_RegisterTypeHandler (handler) {
    (this._assetHandlers).Add(handler.ReturnedType, handler.MemberwiseClone());
  }; 



  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Object"), 
      Name: "Fusee.Base.Imp.Web.WebAssetProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WebAssetProvider__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "BeginGetAsset", 
      new JSIL.MethodSignature(null, [$.String, $asm00.TypeRef("Fusee.Base.Common.GetCallback")]), 
      WebAssetProvider_BeginGetAsset
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CanGet", 
      new JSIL.MethodSignature($.Boolean, [$.String, $asm0E.TypeRef("System.Type")]), 
      WebAssetProvider_CanGet
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CanHandleType", 
      new JSIL.MethodSignature($.Boolean, [$asm0E.TypeRef("System.Type")]), 
      WebAssetProvider_CanHandleType
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckExists", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetAsset", 
      new JSIL.MethodSignature($.Object, [$.String, $asm0E.TypeRef("System.Type")]), 
      WebAssetProvider_GetAsset
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRawAsset", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RegisterTypeHandler", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Fusee.Base.Common.AssetHandler")), 
      WebAssetProvider_RegisterTypeHandler
    );

    $.ExternalMethod({Static:true , Public:true }, "WrapImage", 
      new JSIL.MethodSignature($asm00.TypeRef("Fusee.Base.Common.ImageData"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "WrapString", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_assetHandlers", $asm0E.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0E.TypeRef("System.Type"), $asm00.TypeRef("Fusee.Base.Common.AssetHandler")]));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Fusee.Base.Common.IAssetProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Base.Imp.Web.WebAssetProvider+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0E.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0E.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Fusee.Base.Common.Path)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.Fusee.Base.Imp.Web.WebAssetProvider)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__1_0 (id, storage) {
    var text = ($T02().GetExtension(id).toLowerCase());
    var a = text;
    if (!((a == ".jpg") || 
        (a == ".jpeg") || 
        (a == ".png") || (a == ".bmp"))) {
      var result = null;
    } else {
      result = $T03().WrapImage(storage).MemberwiseClone();
    }
    return result;
  }; 

  function $l$gc_$l_ctor$gb__1_1 (id) {
    var text = ($T02().GetExtension(id).toLowerCase());
    var a = text;
    return ((a == ".jpg") || 
      (a == ".jpeg") || 
      (a == ".png") || (a == ".bmp"));
  }; 

  function $l$gc_$l_ctor$gb__1_2 (id, storage) {
    return $T03().WrapString(storage);
  }; 

  function $l$gc_$l_ctor$gb__1_3 (id) {
    return true;
  }; 

  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Object"), 
      Name: "Fusee.Base.Imp.Web.WebAssetProvider+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__1_0", 
      new JSIL.MethodSignature($.Object, [$.String, $.Object]), 
      $l$gc_$l_ctor$gb__1_0
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__1_1", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      $l$gc_$l_ctor$gb__1_1
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__1_2", 
      new JSIL.MethodSignature($.Object, [$.String, $.Object]), 
      $l$gc_$l_ctor$gb__1_2
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__1_3", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      $l$gc_$l_ctor$gb__1_3
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__1_0", $asm00.TypeRef("Fusee.Base.Common.AssetDecoder"));

    $.Field({Static:true , Public:true }, "$l$g9__1_1", $asm00.TypeRef("Fusee.Base.Common.AssetChecker"));

    $.Field({Static:true , Public:true }, "$l$g9__1_2", $asm00.TypeRef("Fusee.Base.Common.AssetDecoder"));

    $.Field({Static:true , Public:true }, "$l$g9__1_3", $asm00.TypeRef("Fusee.Base.Common.AssetChecker"));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Base.Imp.Web.IOImp */ 

(function IOImp$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0E.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Fusee.Base.Common.FileMode)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0E.System.IO.FileStream)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0E.System.IO.FileMode)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0E.TypeRef("System.IO.FileStream"), [$asm0E.TypeRef("System.String"), $asm0E.TypeRef("System.IO.FileMode")]))) ();
  };


  function IOImp__ctor () {
  }; 

  function IOImp_StreamFromFile (path, mode) {
    return $S00().Construct(path, $T03().$Cast(mode));
  }; 

  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Object"), 
      Name: "Fusee.Base.Imp.Web.IOImp", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      IOImp__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "StreamFromFile", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.IO.Stream"), [$.String, $asm00.TypeRef("Fusee.Base.Common.FileMode")]), 
      IOImp_StreamFromFile
    );

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Fusee.Base.Common.IIOImp")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

