<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusee.Math.Core</name>
    </assembly>
    <members>
        <member name="T:Fusee.Math.Core.AABBf">
            <summary>
                Represents an axis aligned bounding box.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.AABBf.min">
            <summary>
                The minimum values of the axis aligned bounding box in x, y and z direction
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.AABBf.max">
            <summary>
                The maximum values of the axis aligned bounding box in x, y and z direction
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.AABBf.#ctor(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
                Create a new axis aligned bounding box
            </summary>
            <param name="min_">the minimum x y and z values</param>
            <param name="max_">the maximum x y and z values</param>
        </member>
        <member name="M:Fusee.Math.Core.AABBf.op_Multiply(Fusee.Math.Core.float4x4,Fusee.Math.Core.AABBf)">
            <summary>
                Applies a tranformation on the bounding box. After the tranformation another
                axis alignes bounding box results. This is done by transforming all eight
                vertices of the box and re-aligning to the axes afterwards.
            </summary>
            <param name="m">The transformation matrix</param>
            <param name="box">the box to transform</param>
            <returns>A new axis aligned bounding box.</returns>
        </member>
        <member name="M:Fusee.Math.Core.AABBf.Union(Fusee.Math.Core.AABBf,Fusee.Math.Core.AABBf)">
            <summary>
                Calculates the bounding box around two existing bounding boxes.
            </summary>
            <param name="a">One of the bounding boxes to build the union from</param>
            <param name="b">The other bounding boxe to build the union from</param>
            <returns>The smallest axis aligned bounding box containing both input boxes</returns>
        </member>
        <member name="P:Fusee.Math.Core.AABBf.Center">
            <summary>
                Returns the center of the bounding box
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.AABBf.Size">
            <summary>
                Returns the with, height and depth of the box in x, y and z
            </summary>
        </member>
        <member name="T:Fusee.Math.Core.Curve">
            <summary>
            Represents a curve, using a list of CurveParts.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.Curve.CurveParts">
            <summary>
            The parts forming the curve.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.Curve.CombineCurves(Fusee.Math.Core.Curve,Fusee.Math.Core.Curve)">
            <summary>
            Combines two Curves by creating a new one.
            </summary>
            <param name="a">The first curve to be combined.</param>
            <param name="b">The first curve to be combined.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.Curve.CombineCurves(System.Collections.Generic.IEnumerable{Fusee.Math.Core.Curve})">
            <summary>
            Combines a list of Curves by creating a new Curve out of the list.
            </summary>
            <param name="curves">The curves to be combined.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.Curve.CalcUniformPolyline(System.Int32)">
            <summary>
            Calculates a polygonal chain, representing the curve.
            </summary>
            <param name="subdiv">The number of subdivisions per curve segment.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.Curve.CalcAdaptivePolyline(System.Int32)">
            <summary>
            Calculates a polygonal chain, representing the curve.
            </summary>
            <param name="angle">Determines how far the angle may vary from 180°.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.Curve.CalcAdaptivePolyline(System.Single)">
            <summary>
            Returns a polygonal chain, representing the curve segment. Intermediate points are calculated adaptively.
            </summary>
            <param name="acreage">Determines the maximum acreage for the triangle consisting out of start point, random point and end point.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Math.Core.CurvePart">
            <summary>
            Represents a open or closed part of a curve, using a list of CurveSegments and its starting point.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.CurvePart.IsClosed">
            <summary>
            A CurvePart can be closed or open.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.CurvePart.StartPoint">
            <summary>
            The starting point of the CurvePart.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.CurvePart.CurveSegments">
            <summary>
            The segments making up the CurvePart.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.CurvePart.CalcUniformPolyline(System.Int32)">
            <summary>
            Calculates a polygonal chain, representing the CurvePart.
            </summary>
            <param name="subdiv">The number of subdivisions per CurveSegment.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Int32)">
            <summary>
            Calculates a polygonal chain, representing the curve part.
            </summary>
            <param name="angle">Determines how far the angle may vary from 180°.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Single)">
            <summary>
            Returns a polygonal chain, representing the curve segment. Intermediate points are calculated adaptively.
            </summary>
            <param name="acreage">Determines a maximal acreage for the triangle created from start point random point and end point.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Math.Core.CurveSegment">
            <summary>
            The base class for CurveSegments.
            A CurveSgment does not know its own start point. For the first CurveSegment in a sequence the start point is saved in the CurvePart belonging to the segment.
            The start point for the CurveSegment with index i is the last vertex in the CurveSegent[i-1]'s list of vertices.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.CurveSegment.Vertices">
             <summary>
            The vertices of a CurveSegment represented by float3s.
             </summary>
        </member>
        <member name="M:Fusee.Math.Core.CurveSegment.CalcPoint(System.Single,Fusee.Math.Core.float3[])">
            <summary>
            Calculates a point on a bézier curve using De Casteljaus algorithm.
            </summary>
            <param name="t">Beziér curves are polynominals of t. t is element of [0, 1]</param>
            <param name="vertices">All control points thet represent the curve, incl. start and end point</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.CurveSegment.SplitCurve(System.Single,Fusee.Math.Core.float3[],System.Collections.Generic.List{Fusee.Math.Core.float3}@,System.Collections.Generic.List{Fusee.Math.Core.float3}@)">
            <summary>
            Splits a curve using De Casteljaus algorithm.
            </summary>
            <param name="t">Beziér curves are polynominals of t. t is element of [0, 1].</param>
            <param name="vertices">All control points that represent the curve, incl. start and end point.</param>
            <param name="leftCurve">The left new curve.</param>
            <param name="rightCurve">The right new curve.</param>
        </member>
        <member name="M:Fusee.Math.Core.CurveSegment.CalcUniformPolyline(Fusee.Math.Core.float3,System.Int32,System.Int32)">
            <summary>
            Returns a polygonal chain, representing the curve segment. Intermediate points are calculated with uniform values of t.
            </summary>
            <param name="startPoint">The segment's starting point.</param>
            <param name="segmentsPerCurve">The number of segments per curve.</param>
            <param name="degree">The degree of the curve: 1 for linear, 2 for conic, 3 for cubic.</param>
        </member>
        <member name="M:Fusee.Math.Core.CurveSegment.CalcAdaptivePolylineWAngle(Fusee.Math.Core.float3,System.Int32,System.Int32)">
            <summary>
            Returns a polygonal chain, representing the curve segment. Intermediate points are calculated adaptively.
            </summary>
            <param name="startPoint">The segment's starting point</param>
            <param name="angle">Determines how far the angle between the two vectors(start point, random point and end point) may vary from 180°</param>
            <param name="degree">The degree of the curve: 1 for linear, 2 for conic, 3 for cubic</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.CurveSegment.CalcAdaptivePolylineWArcreage(Fusee.Math.Core.float3,System.Single,System.Int32)">
            <summary>
            Returns a polygonal chain, representing the curve segment. Intermediate points are calculated adaptively.
            </summary>
            <param name="startPoint">The segment's starting point</param>
            <param name="acreage">Determines a maximal acreage for the tringale created from start point random point and end point.</param>
            <param name="degree">The degree of the curve: 1 for linear, 2 for conic, 3 for cubic</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Math.Core.LinearSegment">
            <summary>
            Represents a linear segment of a CurvePart by using a list of float3s.
            A CurveSgment does not know its own start point. For the first CurveSegment in a sequence the start point is saved in the CurvePart belonging to the segment.
            The start point for the CurveSegment with index i is the last vertex in the CurveSegent[i-1]'s list of vertices.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.LinearSegment.CalcUniformPolyline(Fusee.Math.Core.float3,System.Int32,System.Int32)">
            <summary>
            Calculates a polygonal chain, representing the curve segment.
            </summary>
            <param name="startPoint">The segment's starting point</param>
            <param name="segmentsPerCurve">The number of segments per curve</param>
            <param name="degree">The degree of the curve: 1 for linear, 2 for conic, 3 for cubic</param>
        </member>
        <member name="T:Fusee.Math.Core.BezierConicSegment">
            <summary>
            Represents a conic bézier path of a CurvePart by using a list of float3s.
            A CurveSgment does not know its own start point. For the first CurveSegment in a sequence the start point is saved in the CurvePart belonging to the segment.
            The start point for the CurveSegment with index i is the last vertex in the CurveSegent[i-1]'s list of vertices.
            </summary>
        </member>
        <member name="T:Fusee.Math.Core.BezierCubicSegment">
            <summary>
            Represents a cubic bézier path of a CurvePart by using a list of float3s.
            A CurveSgment does not know its own start point. For the first CurveSegment in a sequence the start point is saved in the CurvePart belonging to the segment.
            The start point for the CurveSegment with index i is the last vertex in the CurveSegent[i-1]'s list of vertices.
            </summary>
        </member>
        <member name="T:Fusee.Math.Core.double2">
            <summary>
            Represents a 2D vector using two double-precision floating-point numbers.
            </summary>
            <remarks>
            The double2 structure is suitable for interoperation with unmanaged code requiring two consecutive doubles.
            </remarks>
        </member>
        <member name="F:Fusee.Math.Core.double2.x">
            <summary>
            The x component of the double2.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double2.y">
            <summary>
            The y component of the double2.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double2.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a new double2.
            </summary>
            <param name="x">The x coordinate of the net double2.</param>
            <param name="y">The y coordinate of the net double2.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.#ctor(Fusee.Math.Core.double2)">
            <summary>
            Constructs a new double2 from the given double2.
            </summary>
            <param name="v">The double2 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.#ctor(Fusee.Math.Core.double3)">
            <summary>
            Constructs a new double2 from the given double3.
            </summary>
            <param name="v">The double3 to copy components from. Z is discarded.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.#ctor(Fusee.Math.Core.double4)">
            <summary>
            Constructs a new double2 from the given double4.
            </summary>
            <param name="v">The double4 to copy components from. Z and W are discarded.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Add(Fusee.Math.Core.double2)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Add(Fusee.Math.Core.double2@)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Sub(Fusee.Math.Core.double2)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Sub(Fusee.Math.Core.double2@)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Mult(System.Double)">
            <summary>
            Multiply this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Div(System.Double)">
            <summary>
            Divide this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="P:Fusee.Math.Core.double2.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <value>
            The length.
            </value>
            <see cref="P:Fusee.Math.Core.double2.LengthFast" />
              <seealso cref="P:Fusee.Math.Core.double2.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.double2.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <value>
            The length fast.
            </value>
            <see cref="P:Fusee.Math.Core.double2.Length" />
              <seealso cref="P:Fusee.Math.Core.double2.LengthSquared" />
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.double2.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <value>
            The length squared.
            </value>
            <see cref="P:Fusee.Math.Core.double2.Length" />
              <seealso cref="P:Fusee.Math.Core.double2.LengthFast" />
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.double2.PerpendicularRight">
            <summary>
            Gets the perpendicular vector on the right side of this vector.
            </summary>
            <value>
            The perpendicular right.
            </value>
        </member>
        <member name="P:Fusee.Math.Core.double2.PerpendicularLeft">
            <summary>
            Gets the perpendicular vector on the left side of this vector.
            </summary>
            <value>
            The perpendicular left.
            </value>
        </member>
        <member name="M:Fusee.Math.Core.double2.Normalize">
            <summary>
            Scales the double2 to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double2.NormalizeFast">
            <summary>
            Scales the double2 to approximately unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double2.Scale(System.Double,System.Double)">
            <summary>
            Scales the current double2 by the given amounts.
            </summary>
            <param name="sx">The scale of the x component.</param>
            <param name="sy">The scale of the y component.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Scale(Fusee.Math.Core.double2)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Scale(Fusee.Math.Core.double2@)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.ToArray">
            <summary>
            Returns an array of doubles with the two components of the vector.
            </summary>
            <returns>Returns an array of doubles with the two components of the vector.</returns>
        </member>
        <member name="F:Fusee.Math.Core.double2.UnitX">
            <summary>
            Defines a unit-length double2 that points towards the x-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double2.UnitY">
            <summary>
            Defines a unit-length double2 that points towards the y-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double2.Zero">
            <summary>
            Defines a zero-length double2.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double2.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double2.Sub(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Sub(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Mult(Fusee.Math.Core.double2,System.Double)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the multiplication
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Mult(Fusee.Math.Core.double2@,System.Double,Fusee.Math.Core.double2@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Div(Fusee.Math.Core.double2,System.Double)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the division
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Div(Fusee.Math.Core.double2@,System.Double,Fusee.Math.Core.double2@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Add(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>
            Result of operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Add(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Subtract(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Subtract(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Multiply(Fusee.Math.Core.double2,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Multiply(Fusee.Math.Core.double2@,System.Double,Fusee.Math.Core.double2@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Multiply(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Multiply(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Divide(Fusee.Math.Core.double2,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Divide(Fusee.Math.Core.double2@,System.Double,Fusee.Math.Core.double2@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Divide(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Divide(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.ComponentMin(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise minimum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.ComponentMin(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.ComponentMax(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise maximum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.ComponentMax(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Min(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Returns the double3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum double3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Max(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Returns the double3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum double3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Clamp(Fusee.Math.Core.double2,Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>
            The clamped vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Clamp(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Normalize(Fusee.Math.Core.double2)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Normalize(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.NormalizeFast(Fusee.Math.Core.double2)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.NormalizeFast(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Dot(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The dot product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Dot(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,System.Double@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Lerp(Fusee.Math.Core.double2,Fusee.Math.Core.double2,System.Double)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>
            a when blend=0, b when blend=1, and a linear combination otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Lerp(Fusee.Math.Core.double2@,Fusee.Math.Core.double2@,System.Double,Fusee.Math.Core.double2@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Barycentric(Fusee.Math.Core.double2,Fusee.Math.Core.double2,Fusee.Math.Core.double2,System.Double,System.Double)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>
            a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.IsTriangleCW(Fusee.Math.Core.double2,Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Determines whether the specified triangle is in clockwise winding order.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name= "c">The third point of the triangle.</param>
            <returns>true if the triangle is clockwise, otherwise false.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.GetBarycentric(Fusee.Math.Core.double2,Fusee.Math.Core.double2,Fusee.Math.Core.double2,Fusee.Math.Core.double2,System.Double@,System.Double@)">
            <summary>
            Calculates the barycentric coordinates for the given point in the given triangle, such that u*a + v*b + (1-u-v)*c = point.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name="c">The third point of the triangle.</param>
            <param name="point">The point to calculate the barycentric coordinates for.</param>
            <param name="u">The resulting u coordinate.</param>
            <param name="v">The resulting v coordinate.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.Transform(Fusee.Math.Core.double2,Fusee.Math.Core.QuaternionD)">
            <summary>
            Transforms a vector by a QuaternionD rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The QuaternionD to rotate the vector by.</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Transform(Fusee.Math.Core.double2@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.double2@)">
            <summary>
            Transforms a vector by a QuaternionD rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The QuaternionD to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Addition(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Adds the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            Result of addition.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Subtraction(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Subtracts the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            Result of subtraction.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_UnaryNegation(Fusee.Math.Core.double2)">
            <summary>
            Negates the specified instance.
            </summary>
            <param name="vec">Operand.</param>
            <returns>
            Result of negation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Multiply(Fusee.Math.Core.double2,System.Double)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of multiplication.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Multiply(System.Double,Fusee.Math.Core.double2)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="scale">Left operand.</param>
            <param name="vec">Right operand.</param>
            <returns>
            Result of multiplication.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Division(Fusee.Math.Core.double2,System.Double)">
            <summary>
            Divides the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand</param>
            <param name="scale">Right operand</param>
            <returns>
            Result of the division.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Equality(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Compares the specified instances for equality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            True if both instances are equal; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.op_Inequality(Fusee.Math.Core.double2,Fusee.Math.Core.double2)">
            <summary>
            Compares the specified instances for inequality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            True if both instances are not equal; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.ToString">
            <summary>
            Returns a System.String that represents the current double2.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>
            A System.Int32 containing the unique hashcode for this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>
            True if the instances are equal; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double2.Equals(Fusee.Math.Core.double2)">
            <summary>
            Indicates whether the current vector is equal to another vector.
            </summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>
            true if the current vector is equal to the vector parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.double2.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a double2.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.double3">
            <summary>
            Represents a 3D vector using three double-precision floating-point numbers.
            </summary>
            <remarks>
            The double3 structure is suitable for interoperation with unmanaged code requiring three consecutive doubles.
            </remarks>
        </member>
        <member name="F:Fusee.Math.Core.double3.x">
            <summary>
            The x component of the double3.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double3.y">
            <summary>
            The y component of the double3.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double3.z">
            <summary>
            The z component of the double3.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new double3.
            </summary>
            <param name="x">The x component of the double3.</param>
            <param name="y">The y component of the double3.</param>
            <param name="z">The z component of the double3.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double2)">
            <summary>
            Constructs a new double3 from the given double2.
            </summary>
            <param name="v">The double2 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double3)">
            <summary>
            Constructs a new double3 from the given double3.
            </summary>
            <param name="v">The double3 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double4)">
            <summary>
            Constructs a new double3 from the given double4.
            </summary>
            <param name="v">The double4 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3@)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Sub(Fusee.Math.Core.double3)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Sub(Fusee.Math.Core.double3@)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Mult(System.Double)">
            <summary>
            Multiply this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Div(System.Double)">
            <summary>
            Divide this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="P:Fusee.Math.Core.double3.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <value>
            The length.
            </value>
            <see cref="P:Fusee.Math.Core.double3.LengthFast" />
              <seealso cref="P:Fusee.Math.Core.double3.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.double3.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <value>
            The length fast.
            </value>
            <see cref="P:Fusee.Math.Core.double3.Length" />
              <seealso cref="P:Fusee.Math.Core.double3.LengthSquared" />
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.double3.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <value>
            The length squared.
            </value>
            <see cref="P:Fusee.Math.Core.double3.Length" />
              <seealso cref="P:Fusee.Math.Core.double3.LengthFast" />
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double3.Normalize">
            <summary>
            Scales the double3 to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double3.NormalizeFast">
            <summary>
            Scales the double3 to approximately unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double3.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scales the current double3 by the given amounts.
            </summary>
            <param name="sx">The scale of the x component.</param>
            <param name="sy">The scale of the y component.</param>
            <param name="sz">The scale of the z component.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Scale(Fusee.Math.Core.double3)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Scale(Fusee.Math.Core.double3@)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.ToArray">
            <summary>
            Returns an array of doubles with the three components of the vector.
            </summary>
            <returns>Returns an array of doubles with the three components of the vector.</returns>
        </member>
        <member name="F:Fusee.Math.Core.double3.UnitX">
            <summary>
            Defines a unit-length double3 that points towards the x-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double3.UnitY">
            <summary>
            Defines a unit-length double3 that points towards the y-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double3.UnitZ">
            <summary>
            Defines a unit-length double3 that points towards the z-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double3.Zero">
            <summary>
            Defines a zero-length double3.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double3.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double3.Sub(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Sub(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Mult(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the multiplication
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Mult(Fusee.Math.Core.double3@,System.Double,Fusee.Math.Core.double3@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Div(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the division
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Div(Fusee.Math.Core.double3@,System.Double,Fusee.Math.Core.double3@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>
            Result of operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Subtract(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Subtract(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3@,System.Double,Fusee.Math.Core.double3@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3@,System.Double,Fusee.Math.Core.double3@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.ComponentMin(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise minimum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.ComponentMin(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.ComponentMax(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise maximum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.ComponentMax(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Min(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Returns the double3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum double3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Max(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Returns the double3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum double3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Clamp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>
            The clamped vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Clamp(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Normalize(Fusee.Math.Core.double3)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Normalize(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.NormalizeFast(Fusee.Math.Core.double3)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.NormalizeFast(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Dot(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The dot product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Dot(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,System.Double@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Cross(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The cross product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Cross(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,Fusee.Math.Core.double3@)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The cross product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Lerp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>
            a when blend=0, b when blend=1, and a linear combination otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Lerp(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,System.Double,Fusee.Math.Core.double3@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Barycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double,System.Double)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>
            a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.GetBarycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double@,System.Double@)">
            <summary>
            Calculates the barycentric coordinates for the given point in the given triangle, such that u*a + v*b + (1-u-v)*c = point.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name="c">The third point of the triangle.</param>
            <param name="point">The point to calculate the barycentric coordinates for.</param>
            <param name="u">The resulting u coordinate.</param>
            <param name="v">The resulting v coordinate.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformVector(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a direction vector by the given Matrix
            Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformVector(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double3@)">
            <summary>
            Transform a direction vector by the given Matrix
            Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformNormal(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a Normal by the given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed normal
            </returns>
            <remarks>
            This calculates the inverse of the given matrix, use TransformNormalInverse if you
            already have the inverse to avoid this extra calculation
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformNormal(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double3@)">
            <summary>
            Transform a Normal by the given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed normal</param>
            <remarks>
            This calculates the inverse of the given matrix, use TransformNormalInverse if you
            already have the inverse to avoid this extra calculation
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformNormalInverse(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a Normal by the (transpose of the) given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="invMat">The inverse of the desired transformation</param>
            <returns>
            The transformed normal
            </returns>
            <remarks>
            This version doesn't calculate the inverse matrix.
            Use this version if you already have the inverse of the desired transform to hand
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformNormalInverse(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double3@)">
            <summary>
            Transform a Normal by the (transpose of the) given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="invMat">The inverse of the desired transformation</param>
            <param name="result">The transformed normal</param>
            <remarks>
            This version doesn't calculate the inverse matrix.
            Use this version if you already have the inverse of the desired transform to hand
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformPosition(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a Position by the given Matrix
            </summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed position
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformPosition(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double3@)">
            <summary>
            Transform a Position by the given Matrix
            </summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed position</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Transform(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a Vector by the given Matrix
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Transform(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double3@)">
            <summary>
            Transform a Vector by the given Matrix
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.Transform(Fusee.Math.Core.double3,Fusee.Math.Core.QuaternionD)">
            <summary>
            Transforms a vector by a QuaternionD rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The QuaternionD to rotate the vector by.</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Transform(Fusee.Math.Core.double3@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.double3@)">
            <summary>
            Transforms a vector by a QuaternionD rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The QuaternionD to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformPerspective(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a double3 by the given Matrix, and project the resulting double4 back to a double3
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.TransformPerspective(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double3@)">
            <summary>
            Transform a double3 by the given Matrix, and project the resulting double4 back to a double3
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double3.CalculateAngle(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Calculates the angle (in radians) between two vectors.
            </summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <returns>
            Angle (in radians) between the vectors.
            </returns>
            <remarks>
            Note that the returned angle is never bigger than the constant Pi.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double3.CalculateAngle(Fusee.Math.Core.double3@,Fusee.Math.Core.double3@,System.Double@)">
            <summary>
            Calculates the angle (in radians) between two vectors.
            </summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <param name="result">Angle (in radians) between the vectors.</param>
            <remarks>
            Note that the returned angle is never bigger than the constant Pi.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.double3.xy">
            <summary>
            Gets or sets an OpenTK.double2 with the x and y components of this instance.
            </summary>
            <value>
            The xy.
            </value>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Addition(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Subtraction(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_UnaryNegation(Fusee.Math.Core.double3)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Multiply(System.Double,Fusee.Math.Core.double3)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Division(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Equality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            True, if left equals right; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.op_Inequality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            True, if left does not equa lright; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.ToString">
            <summary>
            Returns a System.String that represents the current double3.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>
            A System.Int32 containing the unique hashcode for this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double3.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>
            True if the instances are equal; false otherwise.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.double3.r">
            <summary>
            The red component (same as x)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double3.g">
            <summary>
            The green component (same as y)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double3.b">
            <summary>
            The blue component (same as z)
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double3.Equals(Fusee.Math.Core.double3)">
            <summary>
            Indicates whether the current vector is equal to another vector.
            </summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>
            true if the current vector is equal to the vector parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.double3.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a double3.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.double4">
            <summary>
            Represents a 4D vector using four double-precision floating-point numbers.
            </summary>
            <remarks>
            The double4 structure is suitable for interoperation with unmanaged code requiring four consecutive doubles.
            </remarks>
        </member>
        <member name="F:Fusee.Math.Core.double4.x">
            <summary>
            The x component of the double4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.y">
            <summary>
            The y component of the double4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.z">
            <summary>
            The z component of the double4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.w">
            <summary>
            The w component of the double4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.UnitX">
            <summary>
            Defines a unit-length double4 that points towards the x-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.UnitY">
            <summary>
            Defines a unit-length double4 that points towards the y-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.UnitZ">
            <summary>
            Defines a unit-length double4 that points towards the z-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.UnitW">
            <summary>
            Defines a unit-length double4 that points towards the w-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.Zero">
            <summary>
            Defines a zero-length double4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new double4.
            </summary>
            <param name="x">The x component of the double4.</param>
            <param name="y">The y component of the double4.</param>
            <param name="z">The z component of the double4.</param>
            <param name="w">The w component of the double4.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.#ctor(Fusee.Math.Core.double2)">
            <summary>
            Constructs a new double4 from the given double2.
            </summary>
            <param name="v">The double2 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.#ctor(Fusee.Math.Core.double3)">
            <summary>
            Constructs a new double4 from the given double3.
            </summary>
            <param name="v">The double3 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.#ctor(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Constructs a new double4 from the specified double3 and ww component.
            </summary>
            <param name="v">The double3 to copy components from.</param>
            <param name="ww">The ww component of the new double4.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.#ctor(Fusee.Math.Core.double4)">
            <summary>
            Constructs a new double4 from the given double4.
            </summary>
            <param name="v">The double4 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Add(Fusee.Math.Core.double4)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Add(Fusee.Math.Core.double4@)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Sub(Fusee.Math.Core.double4)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Sub(Fusee.Math.Core.double4@)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Mult(System.Double)">
            <summary>
            Multiply this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Div(System.Double)">
            <summary>
            Divide this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="P:Fusee.Math.Core.double4.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <value>
            The length.
            </value>
            <see cref="P:Fusee.Math.Core.double4.LengthFast" />
              <seealso cref="P:Fusee.Math.Core.double4.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.double4.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <value>
            The length fast.
            </value>
            <see cref="P:Fusee.Math.Core.double4.Length" />
              <seealso cref="P:Fusee.Math.Core.double4.LengthSquared" />
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.double4.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <value>
            The length squared.
            </value>
            <see cref="P:Fusee.Math.Core.double4.Length" />
              <seealso cref="P:Fusee.Math.Core.double4.LengthFast" />
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double4.Normalize">
            <summary>
            Scales the double4 to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4.NormalizeFast">
            <summary>
            Scales the double4 to approximately unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4.Scale(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Scales the current double4 by the given amounts.
            </summary>
            <param name="sx">The scale of the x component.</param>
            <param name="sy">The scale of the y component.</param>
            <param name="sz">The scale of the z component.</param>
            <param name="sw">The scale of the z component.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Scale(Fusee.Math.Core.double4)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Scale(Fusee.Math.Core.double4@)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.ToArray">
            <summary>
            Returns an array of doubles with the four components of the vector.
            </summary>
            <returns>Returns an array of doubles with the four components of the vector.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Sub(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Sub(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Mult(Fusee.Math.Core.double4,System.Double)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the multiplication
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Mult(Fusee.Math.Core.double4@,System.Double,Fusee.Math.Core.double4@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Div(Fusee.Math.Core.double4,System.Double)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the division
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Div(Fusee.Math.Core.double4@,System.Double,Fusee.Math.Core.double4@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Add(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>
            Result of operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Add(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Subtract(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Subtract(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Multiply(Fusee.Math.Core.double4,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Multiply(Fusee.Math.Core.double4@,System.Double,Fusee.Math.Core.double4@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Multiply(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Multiply(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Divide(Fusee.Math.Core.double4,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Divide(Fusee.Math.Core.double4@,System.Double,Fusee.Math.Core.double4@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Divide(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Divide(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Min(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise minimum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Min(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Max(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise maximum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Max(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Clamp(Fusee.Math.Core.double4,Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>
            The clamped vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Clamp(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Normalize(Fusee.Math.Core.double4)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Normalize(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.NormalizeFast(Fusee.Math.Core.double4)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.NormalizeFast(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Dot(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The dot product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Dot(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,System.Double@)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Lerp(Fusee.Math.Core.double4,Fusee.Math.Core.double4,System.Double)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>
            a when blend=0, b when blend=1, and a linear combination otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Lerp(Fusee.Math.Core.double4@,Fusee.Math.Core.double4@,System.Double,Fusee.Math.Core.double4@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.BaryCentric(Fusee.Math.Core.double4,Fusee.Math.Core.double4,Fusee.Math.Core.double4,System.Double,System.Double)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>
            a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Transform(Fusee.Math.Core.double4,Fusee.Math.Core.double4x4)">
            <summary>
            Transform a Vector by the given Matrix
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Transform(Fusee.Math.Core.double4@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double4@)">
            <summary>
            Transform a Vector by the given Matrix
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Fusee.Math.Core.double4.Transform(Fusee.Math.Core.double4,Fusee.Math.Core.QuaternionD)">
            <summary>
            Transforms a vector by a QuaternionD rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The QuaternionD to rotate the vector by.</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Transform(Fusee.Math.Core.double4@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.double4@)">
            <summary>
            Transforms a vector by a QuaternionD rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The QuaternionD to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="P:Fusee.Math.Core.double4.xy">
            <summary>
            Gets or sets an OpenTK.double2 with the x and y components of this instance.
            </summary>
            <value>
            The xy.
            </value>
        </member>
        <member name="P:Fusee.Math.Core.double4.xyz">
            <summary>
            Gets or sets an OpenTK.double3 with the x, y and z components of this instance.
            </summary>
            <value>
            The xyz.
            </value>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Addition(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Subtraction(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_UnaryNegation(Fusee.Math.Core.double4)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Multiply(Fusee.Math.Core.double4,System.Double)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Multiply(System.Double,Fusee.Math.Core.double4)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Division(Fusee.Math.Core.double4,System.Double)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Equality(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            True, if left equals right; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.op_Inequality(Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            True, if left does not equa lright; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.ToString">
            <summary>
            Returns a System.String that represents the current double4.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>
            A System.Int32 containing the unique hashcode for this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.double4.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>
            True if the instances are equal; false otherwise.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.double4.r">
            <summary>
            The red component (same as x)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4.g">
            <summary>
            The green component (same as y)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4.b">
            <summary>
            The blue component (same as z)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4.rgb">
            <summary>
            The rgb component (same as xyz)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4.a">
            <summary>
            The alpha component (same as w)
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4.Equals(Fusee.Math.Core.double4)">
            <summary>
            Indicates whether the current vector is equal to another vector.
            </summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>
            true if the current vector is equal to the vector parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.double4.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a double4.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.double4x4">
            <summary>
            Represents a 4x4 Matrix typically used in ComputerGraphics algorithms.
            </summary>
            <remarks>
            <para>
            double4x4 objects represent matrices used in column-vector-notation, that means
            when used in common matrix-vector-multiplication scenarios, the vector should
            be multiplied from the right to the matrix (M * v). Concatenations of matrices
            from left to right represent a transformation where the rightmost matrix is applied
            first and the leftmost matrix is applied last, for example in (M3 * M2 * M1) * v the vector
            v is first transformed by M1, then by M2 and finally by M3. The translation part of a 4x4
            matrix used in homogeneus coordinate calculations can be found in the the leftmost column 
            (M14 - x-translation, M24 - y-translation, M34 - z-translation).
            </para>
            <para>
            Note that although double4x4 objects represent matrices in COLUMN-vector-NOTATION as
            found in math books, the objects' contents is physically stored in ROW-major-ORDER, meaning that
            in physical memory, a double4x4's components are stored contiguously in the following order: first row (M11, M12, M13, M14), 
            then second row (M21, M22, M21, M24), and so on. When exchanging matrix contents with libraries like
            graphics engines (OpenGL, Direct3D), physics engines, file formats, etc. make sure to convert to and 
            from the given Matrix layout of the API you are exchanging data with.
            </para>
            <para>
            double4x4 contains convenience construction methods to create matrices commonly
            used in Computer Graphics. Most of these application matrices are handedness-agnostic, meaning
            that the resulting matrices can be used in both, left-handed and right-handed coordinate systems.
            This does not hold for LookAt and Projection matrices where the viewing direction plays a role. In
            left-handed coordinate systems the viewing direction is positive, meaning positions further away have 
            bigger positive z-coordinates wheras in right-handed coordinate systems positions further away have smaller
            negative z-coordinates. By default, double4x4 will assume a left-handed coordinate system, but contains
            convenience construction methods to also create right-handed matrices if necessary. The right-handed versions
            of methods are postfixed with "RH".
            </para>
            </remarks> 
        </member>
        <member name="F:Fusee.Math.Core.double4x4.Row0">
            <summary>
            Top row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4x4.Row1">
            <summary>
            2nd row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4x4.Row2">
            <summary>
            3rd row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4x4.Row3">
            <summary>
            Bottom row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4x4.Identity">
            <summary>
            The identity matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.double4x4.Zero">
            <summary>
            The zero matrix
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.#ctor(Fusee.Math.Core.double4,Fusee.Math.Core.double4,Fusee.Math.Core.double4,Fusee.Math.Core.double4)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="row0">Top row of the matrix</param>
            <param name="row1">Second row of the matrix</param>
            <param name="row2">Third row of the matrix</param>
            <param name="row3">Bottom row of the matrix</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="m00">First item of the first row of the matrix.</param>
            <param name="m01">Second item of the first row of the matrix.</param>
            <param name="m02">Third item of the first row of the matrix.</param>
            <param name="m03">Fourth item of the first row of the matrix.</param>
            <param name="m10">First item of the second row of the matrix.</param>
            <param name="m11">Second item of the second row of the matrix.</param>
            <param name="m12">Third item of the second row of the matrix.</param>
            <param name="m13">Fourth item of the second row of the matrix.</param>
            <param name="m20">First item of the third row of the matrix.</param>
            <param name="m21">Second item of the third row of the matrix.</param>
            <param name="m22">Third item of the third row of the matrix.</param>
            <param name="m23">First item of the third row of the matrix.</param>
            <param name="m30">Fourth item of the fourth row of the matrix.</param>
            <param name="m31">Second item of the fourth row of the matrix.</param>
            <param name="m32">Third item of the fourth row of the matrix.</param>
            <param name="m33">Fourth item of the fourth row of the matrix.</param>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Determinant">
            <summary>
            The determinant of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Column0">
            <summary>
            The first column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Column1">
            <summary>
            The second column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Column2">
            <summary>
            The third column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Column3">
            <summary>
            The fourth column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M11">
            <summary>
            Gets or sets the value at row 1, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M12">
            <summary>
            Gets or sets the value at row 1, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M13">
            <summary>
            Gets or sets the value at row 1, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M14">
            <summary>
            Gets or sets the value at row 1, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M21">
            <summary>
            Gets or sets the value at row 2, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M22">
            <summary>
            Gets or sets the value at row 2, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M23">
            <summary>
            Gets or sets the value at row 2, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M24">
            <summary>
            Gets or sets the value at row 2, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M31">
            <summary>
            Gets or sets the value at row 3, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M32">
            <summary>
            Gets or sets the value at row 3, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M33">
            <summary>
            Gets or sets the value at row 3, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M34">
            <summary>
            Gets or sets the value at row 3, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M41">
            <summary>
            Gets or sets the value at row 4, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M42">
            <summary>
            Gets or sets the value at row 4, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M43">
            <summary>
            Gets or sets the value at row 4, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.M44">
            <summary>
            Gets or sets the value at row 4, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Offset">
            <summary>
            Gets the offset part of the matrix as a <see cref="T:Fusee.Math.Core.double3"/> instance.
            </summary>
            <remarks>
            The offset part of the matrix consists of the M14, M24 and M34 components (in row major order notation).
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Invert">
            <summary>
            Converts this instance into its inverse.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Transpose">
            <summary>
            Converts this instance into its transpose.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateFromAxisAngle(Fusee.Math.Core.double3,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Build a rotation matrix from the specified axis/angle rotation.
            </summary>
            <param name="axis">The axis to rotate about.</param>
            <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
            <param name="result">A matrix instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateFromAxisAngle(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Build a rotation matrix from the specified axis/angle rotation.
            </summary>
            <param name="axis">The axis to rotate about.</param>
            <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
            <returns>A matrix instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationX(System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationX_ROW(System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationX(System.Double)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationX_ROW(System.Double)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationY(System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationY_ROW(System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationY(System.Double)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationY_ROW(System.Double)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="angle">the angle.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationZ(System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the z-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateRotationZ(System.Double)">
            <summary>
            Builds a rotation matrix for a rotation around the z-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateTranslation(System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="x">X translation.</param>
            <param name="y">Y translation.</param>
            <param name="z">Z translation.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateTranslation_ROW(System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
            <param name="result">Translation matrix</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateTranslation(Fusee.Math.Core.double3@,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="vector">The translation vector.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateTranslation(System.Double,System.Double,System.Double)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="x">X translation.</param>
            <param name="y">Y translation.</param>
            <param name="z">Z translation.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateTranslation_ROW(System.Double,System.Double,System.Double)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
            <returns>A matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateTranslation(Fusee.Math.Core.double3)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="vector">The translation vector.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateOrthographic(System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="width">The width of the projection volume.</param>
            <param name="height">The height of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateOrthographic(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="width">The width of the projection volume.</param>
            <param name="height">The height of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateOrthographicOffCenterRH(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a right handed orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a left handed perspective projection matrix.
            </summary>
            <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
            <param name="aspect">Aspect ratio of the view (width / height)</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>fovy is zero, less than zero or larger than Math.PI</item>
            <item>aspect is negative or zero</item>
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveFieldOfView_ROW(System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="fovy">fovy</param>
            <param name="aspect">aspect</param>
            <param name="zNear">zNear</param>
            <param name="zFar">zFar</param>
            <param name="result">result</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a left handed perspective projection matrix.
            </summary>
            <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
            <param name="aspect">Aspect ratio of the view (width / height)</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <returns>A projection matrix that transforms camera space to raster space</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>fovy is zero, less than zero or larger than Math.PI</item>
            <item>aspect is negative or zero</item>
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveFieldOfView_ROW(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <returns></returns>
            <param name="fovy">fovy</param>
            <param name="aspect">aspect</param>
            <param name="zNear">zNear</param>
            <param name="zFar">zFar</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a left handed perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <remarks>Generates a matrix mapping a frustum shaped volume (the viewing frustum) to
            the unit cube (ranging from -1 to 1 in each dimension, also in z). The sign of the z-value is not
            flipped. Given that the underlying rendering platform interprets z-values returned by the
            vertex shader to be in left-handed coordinates, where increasing z-values indicate locations
            further away from the view point (as BOTH, Direct3D AND OpenGL do), this type of matrix is widely
            called to be a "left handed" projection matrix as it assumes a left-handed camera coordinate system.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveOffCenter_ROW(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="left">left</param>
            <param name="right">right</param>
            <param name="bottom">bottom</param>
            <param name="top">top</param>
            <param name="zNear">zNear</param>
            <param name="zFar">zFar</param>
            <param name="result">result</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveOffCenterRH(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Fusee.Math.Core.double4x4@)">
            <summary>
            Creates a right handed perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <remarks>Generates a matrix mapping a frustum shaped volume (the viewing frustum) to
            the unit cube (ranging from -1 to 1 in each dimension, also in z). The sign of the z-value will be
            flipped for vectors multiplied with this matrix. Given that the underlying rendering platform 
            interprets z-values returned by the vertex shader to be in left-handed coordinates, where increasing 
            z-values indicate locations further away from the view point (as BOTH, Direct3D AND OpenGL do), this 
            type of matrix is widely called to be a "right handed" projection matrix as it assumes a right-handed 
            camera coordinate system.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates an left handed perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <returns>A projection matrix that transforms camera space to raster space</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Scale(System.Double)">
            <summary>
            Build a scaling matrix
            </summary>
            <param name="scale">Single scale factor for x,y and z axes</param>
            <returns>A scaling matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Scale(Fusee.Math.Core.double3)">
            <summary>
            Build a scaling matrix
            </summary>
            <param name="scale">Scale factors for x,y and z axes</param>
            <returns>A scaling matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Build a scaling matrix
            </summary>
            <param name="x">Scale factor for x-axis</param>
            <param name="y">Scale factor for y-axis</param>
            <param name="z">Scale factor for z-axis</param>
            <returns>A scaling matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.LookAt(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Build a left handed world space to camera space matrix
            </summary>
            <param name="eye">Eye (camera) position in world space</param>
            <param name="target">Target position in world space</param>
            <param name="up">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.LookAt_ROW(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="eye">eye</param>
            <param name="target">target</param>
            <param name="up">up</param>
            <returns>A matrix.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.LookAtRH(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)">
            <summary>
            Build a right handed world space to camera space matrix
            </summary>
            <param name="eye">Eye (camera) position in world space</param>
            <param name="target">Target position in world space</param>
            <param name="up">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.LookAt(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Build a world space to camera space matrix
            </summary>
            <param name="eyeX">Eye (camera) position in world space</param>
            <param name="eyeY">Eye (camera) position in world space</param>
            <param name="eyeZ">Eye (camera) position in world space</param>
            <param name="targetX">Target position in world space</param>
            <param name="targetY">Target position in world space</param>
            <param name="targetZ">Target position in world space</param>
            <param name="upX">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upY">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upZ">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.LookAt_ROW(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Build a row notation world space to camera space matrix. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="eyeX">Eye (camera) position in world space</param>
            <param name="eyeY">Eye (camera) position in world space</param>
            <param name="eyeZ">Eye (camera) position in world space</param>
            <param name="targetX">Target position in world space</param>
            <param name="targetY">Target position in world space</param>
            <param name="targetZ">Target position in world space</param>
            <param name="upX">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upY">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upZ">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Add(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The left operand of the addition.</param>
            <param name="right">The right operand of the addition.</param>
            <returns>A new instance that is the result of the addition.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Substract(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Substracts the right instance from the left instance.
            </summary>
            <param name="left">The left operand of the substraction.</param>
            <param name="right">The right operand of the substraction.</param>
            <returns>A new instance that is the result of the substraction.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Mult(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <returns>A new instance that is the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Mult(Fusee.Math.Core.double4x4@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double4x4@)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <param name="result">A new instance that is the result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.MultAffine(Fusee.Math.Core.double4x4@,Fusee.Math.Core.double4x4@,Fusee.Math.Core.double4x4@)">
            <summary>
            Multiplies two instances if both matrices represents affine transformations.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <param name="result">A new instance that is the result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Invert(Fusee.Math.Core.double4x4)">
            <summary>
            Calculate the inverse of the given matrix.
            </summary>
            <param name="mat">The matrix to invert.</param>
            <returns>The inverse of the given matrix if it has one, or the input if it is singular.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.InvertAffine(Fusee.Math.Core.double4x4)">
            <summary>
            Calculate the inverse of a given matrix which represents an affine transformation.
            </summary>
            <param name="mat">The matrix to invert.</param>
            <returns>The inverse of the given matrix.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Transpose(Fusee.Math.Core.double4x4)">
            <summary>
            Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <returns>The transpose of the given matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Transpose(Fusee.Math.Core.double4x4@,Fusee.Math.Core.double4x4@)">
            <summary>
            Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <param name="result">The result of the calculation</param>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Transform(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4)">
            <summary>
            Transforms a given vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.TransformPremult(Fusee.Math.Core.double4,Fusee.Math.Core.double4x4)">
            <summary>
            Transforms a given vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.TransformPD(Fusee.Math.Core.double4x4,Fusee.Math.Core.double3)">
            <summary>
            Transforms a given 3D vector by a matrix using perspective division via matrix*vector (Postmultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double3"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.TransformPremultPD(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transforms a given 3D vector by a matrix using perspective division via vector*matrix (Premultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double3"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Addition(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Matrix addition
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new double4x4 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Subtraction(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Matrix substraction
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new double2x2 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Multiply(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Matrix multiplication
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new Matrix44 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Equality(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Inequality(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4x4)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Multiply(Fusee.Math.Core.double4x4,Fusee.Math.Core.double4)">
            <summary>
            Transforms a given vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Multiply(Fusee.Math.Core.double4,Fusee.Math.Core.double4x4)">
            <summary>
            Transforms a given vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Multiply(Fusee.Math.Core.double4x4,Fusee.Math.Core.double3)">
            <summary>
            Transforms a given threedimensional vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.op_Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double4x4)">
            <summary>
            Transforms a given threedimensional vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.double4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.double3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.double4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.ToString">
            <summary>
            Returns a System.String that represents the current Matrix44.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare tresult.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.IsAffine">
            <summary>
            Indicates whether the current matrix represents an affine transformation.
            </summary>
            <returns>true if the current matrix represents an affine transformation; otherwise, false.</returns>
        </member>
        <member name="M:Fusee.Math.Core.double4x4.Equals(Fusee.Math.Core.double4x4)">
            <summary>Indicates whether the current matrix is equal to another matrix.</summary>
            <param name="other">A matrix to compare with this matrix.</param>
            <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
        </member>
        <member name="P:Fusee.Math.Core.double4x4.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a double4x4.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.float2">
            <summary>
            Represents a 2D vector using two single-precision floating-point numbers.
            </summary>
            <remarks>
            The float2 structure is suitable for interoperation with unmanaged code requiring two consecutive floats.
            </remarks>
        </member>
        <member name="F:Fusee.Math.Core.float2.x">
            <summary>
            The x component of the float2.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float2.y">
            <summary>
            The y component of the float2.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a new float2.
            </summary>
            <param name="x">The x coordinate of the net float2.</param>
            <param name="y">The y coordinate of the net float2.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.#ctor(Fusee.Math.Core.float2)">
            <summary>
            Constructs a new float2 from the given float2.
            </summary>
            <param name="v">The float2 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.#ctor(Fusee.Math.Core.float3)">
            <summary>
            Constructs a new float2 from the given float3.
            </summary>
            <param name="v">The float3 to copy components from. Z is discarded.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.#ctor(Fusee.Math.Core.float4)">
            <summary>
            Constructs a new float2 from the given float4.
            </summary>
            <param name="v">The float4 to copy components from. Z and W are discarded.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Add(Fusee.Math.Core.float2)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Add(Fusee.Math.Core.float2@)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Sub(Fusee.Math.Core.float2)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Sub(Fusee.Math.Core.float2@)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Mult(System.Single)">
            <summary>
            Multiply this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Div(System.Single)">
            <summary>
            Divide this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="P:Fusee.Math.Core.float2.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <value>
            The length.
            </value>
            <see cref="P:Fusee.Math.Core.float2.LengthFast" />
              <seealso cref="P:Fusee.Math.Core.float2.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.float2.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <value>
            The length fast.
            </value>
            <see cref="P:Fusee.Math.Core.float2.Length" />
              <seealso cref="P:Fusee.Math.Core.float2.LengthSquared" />
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.float2.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <value>
            The length squared.
            </value>
            <see cref="P:Fusee.Math.Core.float2.Length" />
              <seealso cref="P:Fusee.Math.Core.float2.LengthFast" />
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.float2.PerpendicularRight">
            <summary>
            Gets the perpendicular vector on the right side of this vector.
            </summary>
            <value>
            The perpendicular right.
            </value>
        </member>
        <member name="P:Fusee.Math.Core.float2.PerpendicularLeft">
            <summary>
            Gets the perpendicular vector on the left side of this vector.
            </summary>
            <value>
            The perpendicular left.
            </value>
        </member>
        <member name="M:Fusee.Math.Core.float2.Normalize">
            <summary>
            Scales the float2 to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float2.NormalizeFast">
            <summary>
            Scales the float2 to approximately unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float2.Scale(System.Single,System.Single)">
            <summary>
            Scales the current float2 by the given amounts.
            </summary>
            <param name="sx">The scale of the x component.</param>
            <param name="sy">The scale of the y component.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Scale(Fusee.Math.Core.float2)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Scale(Fusee.Math.Core.float2@)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.ToArray">
            <summary>
            Returns an array of floats with the two components of the vector.
            </summary>
            <returns>Returns an array of floats with the two components of the vector.</returns>
        </member>
        <member name="F:Fusee.Math.Core.float2.UnitX">
            <summary>
            Defines a unit-length float2 that points towards the x-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float2.UnitY">
            <summary>
            Defines a unit-length float2 that points towards the y-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float2.Zero">
            <summary>
            Defines a zero-length float2.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float2.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float2.Sub(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Sub(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Mult(Fusee.Math.Core.float2,System.Single)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the multiplication
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Mult(Fusee.Math.Core.float2@,System.Single,Fusee.Math.Core.float2@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Div(Fusee.Math.Core.float2,System.Single)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the division
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Div(Fusee.Math.Core.float2@,System.Single,Fusee.Math.Core.float2@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Add(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>
            Result of operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Add(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Subtract(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Subtract(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Multiply(Fusee.Math.Core.float2,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Multiply(Fusee.Math.Core.float2@,System.Single,Fusee.Math.Core.float2@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Multiply(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Multiply(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Divide(Fusee.Math.Core.float2,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Divide(Fusee.Math.Core.float2@,System.Single,Fusee.Math.Core.float2@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Divide(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Divide(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.ComponentMin(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise minimum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.ComponentMin(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.ComponentMax(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise maximum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.ComponentMax(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Min(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Returns the float3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum float3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Max(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Returns the float3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum float3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Clamp(Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>
            The clamped vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Clamp(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Normalize(Fusee.Math.Core.float2)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Normalize(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.NormalizeFast(Fusee.Math.Core.float2)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.NormalizeFast(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Dot(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The dot product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Dot(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,System.Single@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Lerp(Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>
            a when blend=0, b when blend=1, and a linear combination otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Lerp(Fusee.Math.Core.float2@,Fusee.Math.Core.float2@,System.Single,Fusee.Math.Core.float2@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.Barycentric(Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single,System.Single)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>
            a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.GetBarycentric(Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single@,System.Single@)">
            <summary>
            Calculates the barycentric coordinates for the given point in the given triangle, such that u*a + v*b + (1-u-v)*c = point.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name="c">The third point of the triangle.</param>
            <param name="point">The point to calculate the barycentric coordinates for.</param>
            <param name="u">The resulting barycentric u coordinate (weight for vertex a).</param>
            <param name="v">The resulting barycentric v coordinate (weight for vertex b).</param>
        </member>
        <member name="M:Fusee.Math.Core.float2.PointInTriangle(Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single@,System.Single@)">
            <summary>
            Checks if the give point is inside the given triangle (a, b, c). Returns the barycentric coordinates using <see cref="M:Fusee.Math.Core.float2.GetBarycentric(Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single@,System.Single@)"/>.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name="c">The third point of the triangle.</param>
            <param name="point">The point to calculate the barycentric coordinates for.</param>
            <param name="u">The resulting barycentric u coordinate (weight for vertex a).</param>
            <param name="v">The resulting barycentric v coordinate (weight for vertex b).</param>
            <returns>true, if the point is inside the triangle a, b, c. Otherwise false.</returns>
        </member>
        <!-- Ungültiger XML-Kommentar wurde für den Member "M:Fusee.Math.Core.float2.IsTriangleCW(Fusee.Math.Core.float2,Fusee.Math.Core.float2,Fusee.Math.Core.float2)" ignoriert -->
        <member name="M:Fusee.Math.Core.float2.Transform(Fusee.Math.Core.float2,Fusee.Math.Core.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Transform(Fusee.Math.Core.float2@,Fusee.Math.Core.Quaternion@,Fusee.Math.Core.float2@)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="P:Fusee.Math.Core.float2.xy">
            <summary>
            Gets or sets an OpenTK.float2 with the x and y components of this instance.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Addition(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Adds the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            Result of addition.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Subtraction(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Subtracts the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            Result of subtraction.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_UnaryNegation(Fusee.Math.Core.float2)">
            <summary>
            Negates the specified instance.
            </summary>
            <param name="vec">Operand.</param>
            <returns>
            Result of negation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Multiply(Fusee.Math.Core.float2,System.Single)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of multiplication.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Multiply(System.Single,Fusee.Math.Core.float2)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="scale">Left operand.</param>
            <param name="vec">Right operand.</param>
            <returns>
            Result of multiplication.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Multiply(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="vec1">Left operand.</param>
            <param name="vec2">Right operand.</param>
            <returns>
            Result of multiplication.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Division(Fusee.Math.Core.float2,System.Single)">
            <summary>
            Divides the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand</param>
            <param name="scale">Right operand</param>
            <returns>
            Result of the division.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Equality(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Compares the specified instances for equality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            True if both instances are equal; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.op_Inequality(Fusee.Math.Core.float2,Fusee.Math.Core.float2)">
            <summary>
            Compares the specified instances for inequality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>
            True if both instances are not equal; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.ToString">
            <summary>
            Returns a System.String that represents the current float2.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>
            A System.Int32 containing the unique hashcode for this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float2.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>
            True if the instances are equal; false otherwise.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.float2.r">
            <summary>
            The red component (same as x)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float2.g">
            <summary>
            The green component (same as y)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float2.rg">
            <summary>
            The rg component (same as xy)
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float2.Equals(Fusee.Math.Core.float2)">
            <summary>
            Indicates whether the current vector is equal to another vector.
            </summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>
            true if the current vector is equal to the vector parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.float2.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a float2.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.float3">
            <summary>
            Represents a 3D vector using three single-precision floating-point numbers.
            </summary>
            <remarks>
            The float3 structure is suitable for interoperation with unmanaged code requiring three consecutive floats.
            </remarks>
        </member>
        <member name="F:Fusee.Math.Core.float3.x">
            <summary>
            The x component of the float3.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3.y">
            <summary>
            The y component of the float3.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3.z">
            <summary>
            The z component of the float3.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new float3.
            </summary>
            <param name="x">The x component of the float3.</param>
            <param name="y">The y component of the float3.</param>
            <param name="z">The z component of the float3.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.#ctor(Fusee.Math.Core.float2)">
            <summary>
            Constructs a new float3 from the given float2.
            </summary>
            <param name="v">The float2 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.#ctor(Fusee.Math.Core.float3)">
            <summary>
            Constructs a new float3 from the given float3.
            </summary>
            <param name="v">The float3 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.#ctor(Fusee.Math.Core.float4)">
            <summary>
            Constructs a new float3 from the given float4.
            </summary>
            <param name="v">The float4 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.#ctor(Fusee.Math.Core.double3)">
            <summary>
            Constructs a new float3 by converting from a double3.
            </summary>
            <param name="d3">The double3 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Add(Fusee.Math.Core.float3)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Add(Fusee.Math.Core.float3@)">
            <summary>
            Add the Vector passed as parameter to this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Sub(Fusee.Math.Core.float3)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Sub(Fusee.Math.Core.float3@)">
            <summary>
            Subtract the Vector passed as parameter from this instance.
            </summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Mult(System.Single)">
            <summary>
            Multiply this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Div(System.Single)">
            <summary>
            Divide this instance by a scalar.
            </summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="P:Fusee.Math.Core.float3.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <value>
            The length.
            </value>
            <see cref="P:Fusee.Math.Core.float3.LengthFast" />
              <seealso cref="P:Fusee.Math.Core.float3.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.float3.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <value>
            The length fast.
            </value>
            <see cref="P:Fusee.Math.Core.float3.Length" />
              <seealso cref="P:Fusee.Math.Core.float3.LengthSquared" />
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.float3.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <value>
            The length squared.
            </value>
            <see cref="P:Fusee.Math.Core.float3.Length" />
              <seealso cref="P:Fusee.Math.Core.float3.LengthFast" />
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float3.Normalize">
            <summary>
            Scales the float3 to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3.NormalizeFast">
            <summary>
            Scales the float3 to approximately unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3.Scale(System.Single,System.Single,System.Single)">
            <summary>
            Scales the current float3 by the given amounts.
            </summary>
            <param name="sx">The scale of the x component.</param>
            <param name="sy">The scale of the y component.</param>
            <param name="sz">The scale of the z component.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Scale(Fusee.Math.Core.float3)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Scale(Fusee.Math.Core.float3@)">
            <summary>
            Scales this instance by the given parameter.
            </summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.ToArray">
            <summary>
            Returns an array of floats with the three components of the vector.
            </summary>
            <returns>Returns an array of floats with the three components of the vector.</returns>
        </member>
        <member name="F:Fusee.Math.Core.float3.UnitX">
            <summary>
            Defines a unit-length float3 that points towards the x-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3.UnitY">
            <summary>
            Defines a unit-length float3 that points towards the y-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3.UnitZ">
            <summary>
            Defines a unit-length float3 that points towards the z-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3.Zero">
            <summary>
            Defines a zero-length float3.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3.Sub(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Sub(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Mult(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the multiplication
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Mult(Fusee.Math.Core.float3@,System.Single,Fusee.Math.Core.float3@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Div(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>
            Result of the division
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Div(Fusee.Math.Core.float3@,System.Single,Fusee.Math.Core.float3@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Add(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>
            Result of operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Add(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Subtract(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            Result of subtraction
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Subtract(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Multiply(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Multiply(Fusee.Math.Core.float3@,System.Single,Fusee.Math.Core.float3@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Multiply(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Multiply(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Divide(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Divide(Fusee.Math.Core.float3@,System.Single,Fusee.Math.Core.float3@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Divide(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>
            Result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Divide(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.ComponentMin(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise minimum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.ComponentMin(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.ComponentMax(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>
            The component-wise maximum
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.ComponentMax(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Min(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Returns the float3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum float3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Max(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Returns the float3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>
            The minimum float3
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Clamp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>
            The clamped vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Clamp(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Normalize(Fusee.Math.Core.float3)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Normalize(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.OrthoNormalize(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Orthoes the normalize.
            </summary>
            <param name="normal">The normal.</param>
            <param name="tangent">The tangent.</param>
            <returns>An float3 Array of size 2 with orthonormalized normal and tangent. </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.NormalizeFast(Fusee.Math.Core.float3)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>
            The normalized vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.NormalizeFast(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Dot(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The dot product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Dot(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,System.Single@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Cross(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>
            The cross product of the two inputs
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Cross(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The cross product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>
            a when blend=0, b when blend=1, and a linear combination otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Lerp(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,System.Single,Fusee.Math.Core.float3@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Barycentric(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>
            a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.GetBarycentric(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single@,System.Single@)">
            <summary>
            Calculates the barycentric coordinates for the given point in the given triangle, such that u*a + v*b + (1-u-v)*c = point.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name="c">The third point of the triangle.</param>
            <param name="point">The point to calculate the barycentric coordinates for.</param>
            <param name="u">The resulting u coordinate.</param>
            <param name="v">The resulting v coordinate.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformVector(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transform a direction vector by the given Matrix
            Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformVector(Fusee.Math.Core.float3@,Fusee.Math.Core.float4x4@,Fusee.Math.Core.float3@)">
            <summary>
            Transform a direction vector by the given Matrix
            Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformNormal(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transform a Normal by the given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed normal
            </returns>
            <remarks>
            This calculates the inverse of the given matrix, use TransformNormalInverse if you
            already have the inverse to avoid this extra calculation
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformNormal(Fusee.Math.Core.float3@,Fusee.Math.Core.float4x4@,Fusee.Math.Core.float3@)">
            <summary>
            Transform a Normal by the given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed normal</param>
            <remarks>
            This calculates the inverse of the given matrix, use TransformNormalInverse if you
            already have the inverse to avoid this extra calculation
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformNormalInverse(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transform a Normal by the (transpose of the) given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="invMat">The inverse of the desired transformation</param>
            <returns>
            The transformed normal
            </returns>
            <remarks>
            This version doesn't calculate the inverse matrix.
            Use this version if you already have the inverse of the desired transform to hand
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformNormalInverse(Fusee.Math.Core.float3@,Fusee.Math.Core.float4x4@,Fusee.Math.Core.float3@)">
            <summary>
            Transform a Normal by the (transpose of the) given Matrix
            </summary>
            <param name="norm">The normal to transform</param>
            <param name="invMat">The inverse of the desired transformation</param>
            <param name="result">The transformed normal</param>
            <remarks>
            This version doesn't calculate the inverse matrix.
            Use this version if you already have the inverse of the desired transform to hand
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformPosition(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transform a Position by the given Matrix
            </summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed position
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformPosition(Fusee.Math.Core.float3@,Fusee.Math.Core.float4x4@,Fusee.Math.Core.float3@)">
            <summary>
            Transform a Position by the given Matrix
            </summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed position</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.Transform(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transform a Vector by the given Matrix
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Transform(Fusee.Math.Core.float3,Fusee.Math.Core.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>
            The result of the operation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Transform(Fusee.Math.Core.float3@,Fusee.Math.Core.Quaternion@,Fusee.Math.Core.float3@)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3.TransformPerspective(Fusee.Math.Core.float4x4)">
            <summary>
            Transform this instance by the given Matrix, and project the resulting float4 back to a float3
            </summary>
            <param name="mat">The desired transformation</param>
            <returns>
            The transformed vector
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.CalculateAngle(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Calculates the angle (in radians) between two vectors.
            </summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <returns>
            Angle (in radians) between the vectors.
            </returns>
            <remarks>
            Note that the returned angle is never bigger than the constant Pi.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float3.CalculateAngle(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,System.Single@)">
            <summary>
            Calculates the angle (in radians) between two vectors.
            </summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <param name="result">Angle (in radians) between the vectors.</param>
            <remarks>
            Note that the returned angle is never bigger than the constant Pi.
            </remarks>
        </member>
        <member name="P:Fusee.Math.Core.float3.xy">
            <summary>
            Gets or sets an OpenTK.float2 with the x and y components of this instance.
            </summary>
            <value>
            The xy.
            </value>
        </member>
        <member name="P:Fusee.Math.Core.float3.xyz">
            <summary>
            Gets or sets an OpenTK.float3 with the x, y and z components of this instance.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Addition(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Subtraction(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_UnaryNegation(Fusee.Math.Core.float3)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Multiply(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Multiply(System.Single,Fusee.Math.Core.float3)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Multiply(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Multiplies two instances (componentwise).
            </summary>
            <param name="vec1">The first instance.</param>
            <param name="vec2">The second instance.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Division(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>
            The result of the calculation.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Equality(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            True, if left equals right; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Inequality(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>
            True, if left does not equa lright; false otherwise.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.op_Explicit(Fusee.Math.Core.double3)~Fusee.Math.Core.float3">
            <summary>
            Explicit cast operator to cast a double3 into a float3 value.
            </summary>
            <param name="d3">The double3 value to cast.</param>
            <returns>A float3 value.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.ToString">
            <summary>
            Returns a System.String that represents the current float3.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>
            A System.Int32 containing the unique hashcode for this instance.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.float3.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>
            True if the instances are equal; false otherwise.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.float3.r">
            <summary>
            The red component (same as x)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3.g">
            <summary>
            The green component (same as y)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3.b">
            <summary>
            The blue component (same as z)
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3.Equals(Fusee.Math.Core.float3)">
            <summary>
            Indicates whether the current vector is equal to another vector.
            </summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>
            true if the current vector is equal to the vector parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:Fusee.Math.Core.float3.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a float3.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.float3x3">
            <summary>
                Represents a 3x3 Matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3x3.Row0">
            <summary>
                Top row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3x3.Row1">
            <summary>
                2nd row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3x3.Row2">
            <summary>
                3rd row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3x3.Identity">
            <summary>
                The identity matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float3x3.Zero">
            <summary>
                The zero matrix
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.#ctor(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
                Constructs a new instance.
            </summary>
            <param name="row0">Top row of the matrix</param>
            <param name="row1">Second row of the matrix</param>
            <param name="row2">Third row of the matrix</param>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Constructs a new instance.
            </summary>
            <param name="m00">First item of the first row of the matrix.</param>
            <param name="m01">Second item of the first row of the matrix.</param>
            <param name="m02">Third item of the first row of the matrix.</param>
            <param name="m10">First item of the second row of the matrix.</param>
            <param name="m11">Second item of the second row of the matrix.</param>
            <param name="m12">Third item of the second row of the matrix.</param>
            <param name="m20">First item of the third row of the matrix.</param>
            <param name="m21">Second item of the third row of the matrix.</param>
            <param name="m22">Third item of the third row of the matrix.</param>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.#ctor(Fusee.Math.Core.float4x4)">
            <summary>
                Constructs a new instance.
            </summary>
            <param name="mat4">The incoming float4x4.</param>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.Determinant">
            <summary>
                The determinant of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.Column0">
            <summary>
                The first column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.Column1">
            <summary>
                The second column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.Column2">
            <summary>
                The third column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M11">
            <summary>
                Gets or sets the value at row 1, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M12">
            <summary>
                Gets or sets the value at row 1, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M13">
            <summary>
                Gets or sets the value at row 1, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M21">
            <summary>
                Gets or sets the value at row 2, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M22">
            <summary>
                Gets or sets the value at row 2, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M23">
            <summary>
                Gets or sets the value at row 2, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M31">
            <summary>
                Gets or sets the value at row 3, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M32">
            <summary>
                Gets or sets the value at row 3, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.M33">
            <summary>
                Gets or sets the value at row 3, column 3 of this instance.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Transpose">
            <summary>
                Converts this instance into its transpose.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Add(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Adds two instances.
            </summary>
            <param name="left">The left operand of the addition.</param>
            <param name="right">The right operand of the addition.</param>
            <returns>A new instance that is the result of the addition.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Substract(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Substracts the right instance from the left instance.
            </summary>
            <param name="left">The left operand of the substraction.</param>
            <param name="right">The right operand of the substraction.</param>
            <returns>A new instance that is the result of the substraction.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Mult(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <returns>A new instance that is the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Mult(Fusee.Math.Core.float3x3@,Fusee.Math.Core.float3x3@,Fusee.Math.Core.float3x3@)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <param name="result">A new instance that is the result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Transpose(Fusee.Math.Core.float3x3)">
            <summary>
                Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <returns>The transpose of the given matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Transpose(Fusee.Math.Core.float3x3@,Fusee.Math.Core.float3x3@)">
            <summary>
                Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <param name="result">The result of the calculation</param>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Addition(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Matrix addition
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new float3x3 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Subtraction(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Matrix substraction
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new float2x2 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Multiply(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Matrix multiplication
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new Float3x3 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Multiply(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3)">
            <summary>
                Transforms a given vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4" /> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float4" /> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4" /> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Multiply(Fusee.Math.Core.float3,Fusee.Math.Core.float3x3)">
            <summary>
                Transforms a given vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4" /> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float4" /> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4" /> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Equality(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.op_Inequality(Fusee.Math.Core.float3x3,Fusee.Math.Core.float3x3)">
            <summary>
                Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.ToString">
            <summary>
                Returns a System.String that represents the current Matrix44.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.GetHashCode">
            <summary>
                Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Equals(System.Object)">
            <summary>
                Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare tresult.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="P:Fusee.Math.Core.float3x3.IsAffine">
            <summary>
                Indicates whether the current matrix represents an affine transformation.
            </summary>
            <returns>true if the current matrix represents an affine transformation; otherwise, false.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float3x3.Equals(Fusee.Math.Core.float3x3)">
            <summary>Indicates whether the current matrix is equal to another matrix.</summary>
            <param name="other">A matrix to compare with this matrix.</param>
            <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
        </member>
        <member name="T:Fusee.Math.Core.float4">
            <summary>Represents a 4D vector using four single-precision floating-point numbers.</summary>
            <remarks>
            The float4 structure is suitable for interoperation with unmanaged code requiring four consecutive floats.
            </remarks>
        </member>
        <member name="F:Fusee.Math.Core.float4.x">
            <summary>
            The x component of the float4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.y">
            <summary>
            The y component of the float4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.z">
            <summary>
            The z component of the float4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.w">
            <summary>
            The w component of the float4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.UnitX">
            <summary>
            Defines a unit-length float4 that points towards the x-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.UnitY">
            <summary>
            Defines a unit-length float4 that points towards the y-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.UnitZ">
            <summary>
            Defines a unit-length float4 that points towards the z-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.UnitW">
            <summary>
            Defines a unit-length float4 that points towards the w-axis.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.Zero">
            <summary>
            Defines a zero-length float4.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new float4.
            </summary>
            <param name="x">The x component of the float4.</param>
            <param name="y">The y component of the float4.</param>
            <param name="z">The z component of the float4.</param>
            <param name="w">The w component of the float4.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.#ctor(Fusee.Math.Core.float2)">
            <summary>
            Constructs a new float4 from the given float2.
            </summary>
            <param name="v">The float2 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.#ctor(Fusee.Math.Core.float3)">
            <summary>
            Constructs a new float4 from the given float3.
            </summary>
            <param name="v">The float3 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.#ctor(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Constructs a new float4 from the specified float3 and ww component.
            </summary>
            <param name="v">The float3 to copy components from.</param>
            <param name="ww">The ww component of the new float4.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.#ctor(Fusee.Math.Core.float4)">
            <summary>
            Constructs a new float4 from the given float4.
            </summary>
            <param name="v">The float4 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.#ctor(Fusee.Math.Core.double4)">
            <summary>
            Constructs a new float4 by converting from a double4.
            </summary>
            <param name="d4">The double4 to copy components from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Add(Fusee.Math.Core.float4)">
            <summary>Add the Vector passed as parameter to this instance.</summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Add(Fusee.Math.Core.float4@)">
            <summary>Add the Vector passed as parameter to this instance.</summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Sub(Fusee.Math.Core.float4)">
            <summary>Subtract the Vector passed as parameter from this instance.</summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Sub(Fusee.Math.Core.float4@)">
            <summary>Subtract the Vector passed as parameter from this instance.</summary>
            <param name="right">Right operand. This parameter is only read from.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Mult(System.Single)">
            <summary>Multiply this instance by a scalar.</summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Div(System.Single)">
            <summary>Divide this instance by a scalar.</summary>
            <param name="f">Scalar operand.</param>
        </member>
        <member name="P:Fusee.Math.Core.float4.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Fusee.Math.Core.float4.LengthFast"/>
            <seealso cref="P:Fusee.Math.Core.float4.LengthSquared"/>
        </member>
        <member name="P:Fusee.Math.Core.float4.Length1">
            <summary>
            Gets the length in 1-norm.
            </summary>
            <see cref="P:Fusee.Math.Core.float4.LengthFast"/>
            <seealso cref="P:Fusee.Math.Core.float4.LengthSquared"/>
        </member>
        <member name="P:Fusee.Math.Core.float4.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Fusee.Math.Core.float4.Length"/>
            <seealso cref="P:Fusee.Math.Core.float4.LengthSquared"/>
        </member>
        <member name="P:Fusee.Math.Core.float4.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Fusee.Math.Core.float4.Length"/>
            <seealso cref="P:Fusee.Math.Core.float4.LengthFast"/>
        </member>
        <member name="M:Fusee.Math.Core.float4.Normalize">
            <summary>
            Scales the float4 to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.Normalize1">
            <summary>
            Scales the float4 to unit length in 1-norm.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.NormalizeFast">
            <summary>
            Scales the float4 to approximately unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.Scale(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Scales the current float4 by the given amounts.
            </summary>
            <param name="sx">The scale of the x component.</param>
            <param name="sy">The scale of the y component.</param>
            <param name="sz">The scale of the z component.</param>
            <param name="sw">The scale of the z component.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Scale(Fusee.Math.Core.float4)">
            <summary>Scales this instance by the given parameter.</summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Scale(Fusee.Math.Core.float4@)">
            <summary>Scales this instance by the given parameter.</summary>
            <param name="scale">The scaling of the individual components.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.ToArray">
            <summary>
            XML-Comment
            </summary>
            <returns>An float array of size 4 that cobtains the x,y,z,w components.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Round">
            <summary>
            Rounds the float4 to 6 digits (max float precision).
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.Sub(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Sub(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Mult(Fusee.Math.Core.float4,System.Single)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>Result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Mult(Fusee.Math.Core.float4@,System.Single,Fusee.Math.Core.float4@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Div(Fusee.Math.Core.float4,System.Single)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>Result of the division</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Div(Fusee.Math.Core.float4@,System.Single,Fusee.Math.Core.float4@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Add(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Add(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Subtract(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Subtract(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Multiply(Fusee.Math.Core.float4,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Multiply(Fusee.Math.Core.float4@,System.Single,Fusee.Math.Core.float4@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Multiply(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Multiply(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Divide(Fusee.Math.Core.float4,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Divide(Fusee.Math.Core.float4@,System.Single,Fusee.Math.Core.float4@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Divide(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Divide(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Min(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Min(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Max(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Max(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Clamp(Fusee.Math.Core.float4,Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Clamp(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Normalize(Fusee.Math.Core.float4)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Normalize(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.NormalizeFast(Fusee.Math.Core.float4)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.NormalizeFast(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Dot(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Dot(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,System.Single@)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.Lerp(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Lerp(Fusee.Math.Core.float4@,Fusee.Math.Core.float4@,System.Single,Fusee.Math.Core.float4@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Fusee.Math.Core.float4.BaryCentric(Fusee.Math.Core.float4,Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.TransformPerspective(Fusee.Math.Core.float4x4)">
            <summary>Transform this Vector by the given Matrix and apply a perspective division.</summary>
            <param name="mat">The desired transformation</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Transform(Fusee.Math.Core.float4,Fusee.Math.Core.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Round(Fusee.Math.Core.float4)">
            <summary>
            Rounds a vector to 6 digits (max float precision).
            </summary>
            <param name="vec">The input vector.</param>
            <returns>The rounded vector.</returns>
        </member>
        <member name="P:Fusee.Math.Core.float4.xy">
            <summary>
            Gets or sets an OpenTK.float2 with the x and y components of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4.xyz">
            <summary>
            Gets or sets an OpenTK.float3 with the x, y and z components of this instance.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Addition(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Subtraction(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_UnaryNegation(Fusee.Math.Core.float4)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Multiply(Fusee.Math.Core.float4,System.Single)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Multiply(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Multiplies two instances (componentwise).
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Multiply(System.Single,Fusee.Math.Core.float4)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Division(Fusee.Math.Core.float4,System.Single)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Equality(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Inequality(Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equa lright; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.op_Explicit(Fusee.Math.Core.double4)~Fusee.Math.Core.float4">
            <summary>
            Explicit cast operator to cast a double4 into a float4 value.
            </summary>
            <param name="d4">The double4 value to cast.</param>
            <returns>A float4 value.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.ToString">
            <summary>
            Returns a System.String that represents the current float4.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="P:Fusee.Math.Core.float4.r">
            <summary>
            The red component (same as x)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4.g">
            <summary>
            The green component (same as y)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4.b">
            <summary>
            The blue component (same as z)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4.rg">
            <summary>
            The rg component (same as xy)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4.rgb">
            <summary>
            The rgb component (same as xyz)
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4.a">
            <summary>
            The alpha component (same as w)
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4.Equals(Fusee.Math.Core.float4)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Fusee.Math.Core.float4.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a float4.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.float4x4">
            <summary>
            Represents a 4x4 Matrix typically used in ComputerGraphics algorithms.
            </summary>
            <remarks>
            <para>
            float4x4 objects represent matrices used in column-vector-notation, that means
            when used in common matrix-vector-multiplication scenarios, the vector should
            be multiplied from the right to the matrix (M * v). Concatenations of matrices
            from left to right represent a transformation where the rightmost matrix is applied
            first and the leftmost matrix is applied last, for example in (M3 * M2 * M1) * v the vector
            v is first transformed by M1, then by M2 and finally by M3. The translation part of a 4x4
            matrix used in homogeneus coordinate calculations can be found in the the leftmost column 
            (M14 - x-translation, M24 - y-translation, M34 - z-translation).
            </para>
            <para>
            Note that although float4x4 objects represent matrices in COLUMN-vector-NOTATION as
            found in math books, the objects' contents is physically stored in ROW-major-ORDER, meaning that
            in physical memory, a float4x4's components are stored contiguously in the following order: first row (M11, M12, M13, M14), 
            then second row (M21, M22, M21, M24), and so on. When exchanging matrix contents with libraries like
            graphics engines (OpenGL, Direct3D), physics engines, file formats, etc. make sure to convert to and 
            from the given Matrix layout of the API you are exchanging data with.
            </para>
            <para>
            float4x4 contains convenience construction methods to create matrices commonly
            used in Computer Graphics. Most of these application matrices are handedness-agnostic, meaning
            that the resulting matrices can be used in both, left-handed and right-handed coordinate systems.
            This does not hold for LookAt and Projection matrices where the viewing direction plays a role. In
            left-handed coordinate systems the viewing direction is positive, meaning positions further away have 
            bigger positive z-coordinates wheras in right-handed coordinate systems positions further away have smaller
            negative z-coordinates. By default, float4x4 will assume a left-handed coordinate system, but contains
            convenience construction methods to also create right-handed matrices if necessary. The right-handed versions
            of methods are postfixed with "RH".
            </para>
            </remarks> 
        </member>
        <member name="F:Fusee.Math.Core.float4x4.Row0">
            <summary>
            Top row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4x4.Row1">
            <summary>
            2nd row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4x4.Row2">
            <summary>
            3rd row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4x4.Row3">
            <summary>
            Bottom row of the matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4x4.Identity">
            <summary>
            The identity matrix
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.float4x4.Zero">
            <summary>
            The zero matrix
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.#ctor(Fusee.Math.Core.float4,Fusee.Math.Core.float4,Fusee.Math.Core.float4,Fusee.Math.Core.float4)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="row0">Top row of the matrix</param>
            <param name="row1">Second row of the matrix</param>
            <param name="row2">Third row of the matrix</param>
            <param name="row3">Bottom row of the matrix</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="m00">First item of the first row of the matrix.</param>
            <param name="m01">Second item of the first row of the matrix.</param>
            <param name="m02">Third item of the first row of the matrix.</param>
            <param name="m03">Fourth item of the first row of the matrix.</param>
            <param name="m10">First item of the second row of the matrix.</param>
            <param name="m11">Second item of the second row of the matrix.</param>
            <param name="m12">Third item of the second row of the matrix.</param>
            <param name="m13">Fourth item of the second row of the matrix.</param>
            <param name="m20">First item of the third row of the matrix.</param>
            <param name="m21">Second item of the third row of the matrix.</param>
            <param name="m22">Third item of the third row of the matrix.</param>
            <param name="m23">First item of the third row of the matrix.</param>
            <param name="m30">Fourth item of the fourth row of the matrix.</param>
            <param name="m31">Second item of the fourth row of the matrix.</param>
            <param name="m32">Third item of the fourth row of the matrix.</param>
            <param name="m33">Fourth item of the fourth row of the matrix.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.#ctor(Fusee.Math.Core.double4x4)">
            <summary>
            Constructs a new float4x4 by converting from a double4x4.
            </summary>
            <param name="d4x4">The double4x4 to copy components from.</param>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Determinant">
            <summary>
            The determinant of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Column0">
            <summary>
            The first column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Column1">
            <summary>
            The second column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Column2">
            <summary>
            The third column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Column3">
            <summary>
            The fourth column of this matrix
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M11">
            <summary>
            Gets or sets the value at row 1, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M12">
            <summary>
            Gets or sets the value at row 1, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M13">
            <summary>
            Gets or sets the value at row 1, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M14">
            <summary>
            Gets or sets the value at row 1, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M21">
            <summary>
            Gets or sets the value at row 2, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M22">
            <summary>
            Gets or sets the value at row 2, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M23">
            <summary>
            Gets or sets the value at row 2, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M24">
            <summary>
            Gets or sets the value at row 2, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M31">
            <summary>
            Gets or sets the value at row 3, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M32">
            <summary>
            Gets or sets the value at row 3, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M33">
            <summary>
            Gets or sets the value at row 3, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M34">
            <summary>
            Gets or sets the value at row 3, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M41">
            <summary>
            Gets or sets the value at row 4, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M42">
            <summary>
            Gets or sets the value at row 4, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M43">
            <summary>
            Gets or sets the value at row 4, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.M44">
            <summary>
            Gets or sets the value at row 4, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Offset">
            <summary>
            Gets the offset part of the matrix as a <see cref="T:Fusee.Math.Core.float3"/> instance.
            </summary>
            <remarks>
            The offset part of the matrix consists of the M14, M24 and M34 components (in row major order notation).
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Invert">
            <summary>
            Converts this instance into its inverse.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Transpose">
            <summary>
            Converts this instance into its transpose.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Round">
            <summary>
            Rounds this instance to 6 digits (max float precision).
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateFromAxisAngle(Fusee.Math.Core.float3,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Build a rotation matrix from the specified axis/angle rotation.
            </summary>
            <param name="axis">The axis to rotate about.</param>
            <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
            <param name="result">A matrix instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateFromAxisAngle(Fusee.Math.Core.float3,System.Single)">
            <summary>
            Build a rotation matrix from the specified axis/angle rotation.
            </summary>
            <param name="axis">The axis to rotate about.</param>
            <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
            <returns>A matrix instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationX(System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationX_ROW(System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationX(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationX_ROW(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationY(System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationY_ROW(System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationY(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationY_ROW(System.Single)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="angle">the angle.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationZ(System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Builds a rotation matrix for a rotation around the z-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateRotationZ(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the z-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateTranslation(System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="x">X translation.</param>
            <param name="y">Y translation.</param>
            <param name="z">Z translation.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateTranslation_ROW(System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
            <param name="result">Translation matrix</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateTranslation(Fusee.Math.Core.float3@,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="vector">The translation vector.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="x">X translation.</param>
            <param name="y">Y translation.</param>
            <param name="z">Z translation.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateTranslation_ROW(System.Single,System.Single,System.Single)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
            <returns>A matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateTranslation(Fusee.Math.Core.float3)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="vector">The translation vector.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateScale(System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a uniform scale matrix with the same scale value along all three dimensions.
            </summary>
            <param name="scale">The value to scale about x, y, and z.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateScale(System.Single)">
            <summary>
            Creates a uniform scale matrix with the same scale value along all three dimensions.
            </summary>
            <param name="scale">The value to scale about x, y, and z.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateScale(System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="x">X scale.</param>
            <param name="y">Y scale.</param>
            <param name="z">Z scale.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateScale(Fusee.Math.Core.float3@,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="vector">The scale vector.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="x">X scale.</param>
            <param name="y">Y scale.</param>
            <param name="z">Z scale.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateScale(Fusee.Math.Core.float3)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="vector">The scale vector.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="width">The width of the projection volume.</param>
            <param name="height">The height of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="width">The width of the projection volume.</param>
            <param name="height">The height of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting float4x4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateOrthographicOffCenterRH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a right handed orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a left handed orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <returns>The resulting float4x4 instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a left handed perspective projection matrix.
            </summary>
            <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
            <param name="aspect">Aspect ratio of the view (width / height)</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>fovy is zero, less than zero or larger than Math.PI</item>
            <item>aspect is negative or zero</item>
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveFieldOfView_ROW(System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="fovy">fovy</param>
            <param name="aspect">aspect</param>
            <param name="zNear">zNear</param>
            <param name="zFar">zFar</param>
            <param name="result">result</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a left handed perspective projection matrix.
            </summary>
            <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
            <param name="aspect">Aspect ratio of the view (width / height)</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <returns>A projection matrix that transforms camera space to raster space</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>fovy is zero, less than zero or larger than Math.PI</item>
            <item>aspect is negative or zero</item>
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveFieldOfView_ROW(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <returns></returns>
            <param name="fovy">fovy</param>
            <param name="aspect">aspect</param>
            <param name="zNear">zNear</param>
            <param name="zFar">zFar</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a left handed perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <remarks>Generates a matrix mapping a frustum shaped volume (the viewing frustum) to
            the unit cube (ranging from -1 to 1 in each dimension, also in z). The sign of the z-value is not
            flipped. Given that the underlying rendering platform interprets z-values returned by the
            vertex shader to be in left-handed coordinates, where increasing z-values indicate locations
            further away from the view point (as BOTH, Direct3D AND OpenGL do), this type of matrix is widely
            called to be a "left handed" projection matrix as it assumes a left-handed camera coordinate system.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveOffCenter_ROW(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="left">left</param>
            <param name="right">right</param>
            <param name="bottom">bottom</param>
            <param name="top">top</param>
            <param name="zNear">zNear</param>
            <param name="zFar">zFar</param>
            <param name="result">result</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveOffCenterRH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Fusee.Math.Core.float4x4@)">
            <summary>
            Creates a right handed perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <remarks>Generates a matrix mapping a frustum shaped volume (the viewing frustum) to
            the unit cube (ranging from -1 to 1 in each dimension, also in z). The sign of the z-value will be
            flipped for vectors multiplied with this matrix. Given that the underlying rendering platform 
            interprets z-values returned by the vertex shader to be in left-handed coordinates, where increasing 
            z-values indicate locations further away from the view point (as BOTH, Direct3D AND OpenGL do), this 
            type of matrix is widely called to be a "right handed" projection matrix as it assumes a right-handed 
            camera coordinate system.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates an left handed perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <returns>A projection matrix that transforms camera space to raster space</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Scale(System.Single)">
            <summary>
            Build a scaling matrix
            </summary>
            <param name="scale">Single scale factor for x,y and z axes</param>
            <returns>A scaling matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Scale(Fusee.Math.Core.float3)">
            <summary>
            Build a scaling matrix
            </summary>
            <param name="scale">Scale factors for x,y and z axes</param>
            <returns>A scaling matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Scale(System.Single,System.Single,System.Single)">
            <summary>
            Build a scaling matrix
            </summary>
            <param name="x">Scale factor for x-axis</param>
            <param name="y">Scale factor for y-axis</param>
            <param name="z">Scale factor for z-axis</param>
            <returns>A scaling matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.LookAt(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Build a left handed world space to camera space matrix
            </summary>
            <param name="eye">Eye (camera) position in world space</param>
            <param name="target">Target position in world space</param>
            <param name="up">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.LookAt_ROW(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Only for testing and debugging purposes during the row notation -> column notation code transition of the math library
            </summary>
            <param name="eye">eye</param>
            <param name="target">target</param>
            <param name="up">up</param>
            <returns>A matrix.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.LookAtRH(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Build a right handed world space to camera space matrix
            </summary>
            <param name="eye">Eye (camera) position in world space</param>
            <param name="target">Target position in world space</param>
            <param name="up">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A float4x4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.LookAt(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Build a world space to camera space matrix
            </summary>
            <param name="eyeX">Eye (camera) position in world space</param>
            <param name="eyeY">Eye (camera) position in world space</param>
            <param name="eyeZ">Eye (camera) position in world space</param>
            <param name="targetX">Target position in world space</param>
            <param name="targetY">Target position in world space</param>
            <param name="targetZ">Target position in world space</param>
            <param name="upX">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upY">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upZ">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A float4x4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.LookAt_ROW(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Build a row notation world space to camera space matrix. Only for testing and debugging purposes during the 
            row notation -> column notation code transition of the math library.
            </summary>
            <param name="eyeX">Eye (camera) position in world space</param>
            <param name="eyeY">Eye (camera) position in world space</param>
            <param name="eyeZ">Eye (camera) position in world space</param>
            <param name="targetX">Target position in world space</param>
            <param name="targetY">Target position in world space</param>
            <param name="targetZ">Target position in world space</param>
            <param name="upX">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upY">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upZ">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Add(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The left operand of the addition.</param>
            <param name="right">The right operand of the addition.</param>
            <returns>A new instance that is the result of the addition.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Substract(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Substracts the right instance from the left instance.
            </summary>
            <param name="left">The left operand of the substraction.</param>
            <param name="right">The right operand of the substraction.</param>
            <returns>A new instance that is the result of the substraction.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Mult(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <returns>A new instance that is the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Mult(Fusee.Math.Core.float4x4@,Fusee.Math.Core.float4x4@,Fusee.Math.Core.float4x4@)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <param name="result">A new instance that is the result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.MultAffine(Fusee.Math.Core.float4x4@,Fusee.Math.Core.float4x4@,Fusee.Math.Core.float4x4@)">
            <summary>
            Multiplies two instances if both matrices represents affine transformations.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <param name="result">A new instance that is the result of the multiplication</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Invert(Fusee.Math.Core.float4x4)">
            <summary>
            Calculate the inverse of the given matrix.
            </summary>
            <param name="mat">The matrix to invert.</param>
            <returns>The inverse of the given matrix if it has one, or the input if it is singular.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.InvertAffine(Fusee.Math.Core.float4x4)">
            <summary>
            Calculate the inverse of a given matrix which represents an affine transformation.
            </summary>
            <param name="mat">The matrix to invert.</param>
            <returns>The inverse of the given matrix.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Transpose(Fusee.Math.Core.float4x4)">
            <summary>
            Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <returns>The transpose of the given matrix</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Transpose(Fusee.Math.Core.float4x4@,Fusee.Math.Core.float4x4@)">
            <summary>
            Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <param name="result">The result of the calculation</param>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Transform(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4)">
            <summary>
            Transforms a given vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.TransformPremult(Fusee.Math.Core.float4,Fusee.Math.Core.float4x4)">
            <summary>
            Transforms a given vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.TransformPD(Fusee.Math.Core.float4x4,Fusee.Math.Core.float3)">
            <summary>
            Transforms a given 3D vector by a matrix using perspective division via matrix*vector (Postmultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float3"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.TransformPremultPD(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transforms a given 3D vector by a matrix using perspective division via vector*matrix (Premultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float3"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Round(Fusee.Math.Core.float4x4)">
            <summary>
            Rounds the given matrix to 6 digits (max float precision).
            </summary>
            <param name="mat">The matrix to round.</param>
            <returns>The rounded matrix.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Addition(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Matrix addition
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new float4x4 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Subtraction(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Matrix substraction
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new float2x2 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Multiply(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Matrix multiplication
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new Matrix44 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Equality(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Inequality(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Multiply(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4)">
            <summary>
            Transforms a given vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Multiply(Fusee.Math.Core.float4,Fusee.Math.Core.float4x4)">
            <summary>
            Transforms a given vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float4"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Multiply(Fusee.Math.Core.float4x4,Fusee.Math.Core.float3)">
            <summary>
            Transforms a given threedimensional vector by a matrix via matrix*vector (Postmultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Multiply(Fusee.Math.Core.float3,Fusee.Math.Core.float4x4)">
            <summary>
            Transforms a given threedimensional vector by a matrix via vector*matrix (Premultiplication of the vector).
            </summary>
            <remarks>
            Before the matrix multiplication the 3D vector is extended to 4D by setting its W component to 1.
            After the matrix multiplication the resulting 4D vector is transformed to 3D by dividing X, Y, and Z by W.
            (perspective division).
            </remarks>
            <param name="matrix">A <see cref="T:Fusee.Math.Core.float4x4"/> instance.</param>
            <param name="vector">A <see cref="T:Fusee.Math.Core.float3"/> instance.</param>
            <returns>A new <see cref="T:Fusee.Math.Core.float4"/> instance containing the result.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.op_Explicit(Fusee.Math.Core.double4x4)~Fusee.Math.Core.float4x4">
            <summary>
            Explicit cast operator to cast a double4x4 into a float4x4 value.
            </summary>
            <param name="d4x4">The double4x4 value to cast.</param>
            <returns>A float4x4 value.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.ToString">
            <summary>
            Returns a System.String that represents the current Matrix44.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare tresult.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.IsAffine">
            <summary>
            Indicates whether the current matrix represents an affine transformation.
            </summary>
            <returns>true if the current matrix represents an affine transformation; otherwise, false.</returns>
        </member>
        <member name="M:Fusee.Math.Core.float4x4.Equals(Fusee.Math.Core.float4x4)">
            <summary>Indicates whether the current matrix is equal to another matrix.</summary>
            <param name="other">A matrix to compare with this matrix.</param>
            <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
        </member>
        <member name="P:Fusee.Math.Core.float4x4.Parse">
            <summary>
            Gets or sets the Converter object. Has the ability to convert a string to a float4x4.
            </summary>
            <value>
            The parse property.
            </value>
        </member>
        <member name="T:Fusee.Math.Core.Converter`2">
            <summary>
            Converter type replacement for System.Converter. Enables this Assembly to be portable
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Math.Core.M">
            <summary>
                Provides standard mathematical functions and helpers for different types.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.M.Min(System.Single,System.Single)">
            <summary>
            Calculates the minimum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The minimum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Max(System.Single,System.Single)">
            <summary>
            Calculates the maximum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The maximum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Min(System.Double,System.Double)">
            <summary>
            Calculates the minimum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The minimum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Max(System.Double,System.Double)">
            <summary>
            Calculates the maximum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The maximum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Min(System.Int32,System.Int32)">
            <summary>
            Calculates the minimum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The minimum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Max(System.Int32,System.Int32)">
            <summary>
            Calculates the maximum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The maximum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Min(System.UInt32,System.UInt32)">
            <summary>
            Calculates the minimum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The minimum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Max(System.UInt32,System.UInt32)">
            <summary>
            Calculates the maximum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The maximum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Min(System.Int16,System.Int16)">
            <summary>
            Calculates the minimum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The minimum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Max(System.Int16,System.Int16)">
            <summary>
            Calculates the maximum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The maximum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Min(System.UInt16,System.UInt16)">
            <summary>
            Calculates the minimum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The minimum of a and b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Max(System.UInt16,System.UInt16)">
            <summary>
            Calculates the maximum of a and b.
            </summary>
            <param name="a">a.</param>
            <param name="b">b.</param>
            <returns>The maximum of a and b.</returns>
        </member>
        <member name="F:Fusee.Math.Core.M.EpsilonFloat">
            <summary>
            Defines the value which represents the machine epsilon for <see cref="T:System.Single"/> in C#.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.EpsilonDouble">
            <summary>
            Defines the value which represents the machine epsilon for <see cref="T:System.Double"/> in C#.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.Pi">
            <summary>
            Defines the value of Pi as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.PiOver2">
            <summary>
            Defines the value of Pi divided by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.PiOver3">
            <summary>
            Defines the value of Pi divided by three as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.PiOver4">
            <summary>
            Defines the value of  Pi divided by four as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.PiOver6">
            <summary>
            Defines the value of Pi divided by six as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.TwoPi">
            <summary>
            Defines the value of Pi multiplied by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.ThreePiOver2">
            <summary>
            Defines the value of Pi multiplied by 3 and divided by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.E">
            <summary>
            Defines the value of E as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.Log10E">
            <summary>
            Defines the base-10 logarithm of E.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.M.Log2E">
            <summary>
            Defines the base-2 logarithm of E.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.M.Sin(System.Single)">
            <summary>
            Returns the Sin of the given value as float.
            </summary>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Cos(System.Single)">
            <summary>
            Returns the Sin of the given value as float.
            </summary>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.M.NextPowerOfTwo(System.Int64)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.NextPowerOfTwo(System.Int32)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.NextPowerOfTwo(System.Single)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.NextPowerOfTwo(System.Double)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.IsPowerOfTwo(System.Int32)">
            <summary>
            Determines whether the specified value is a power of two.
            </summary>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Factorial(System.Int32)">
            <summary>Calculates the factorial of a given natural number.
            </summary>
            <param name="n">The number.</param>
            <returns>n!</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.BinomialCoefficient(System.Int32,System.Int32)">
            <summary>
            Calculates the binomial coefficient <paramref name="n"/> above <paramref name="k"/>.
            </summary>
            <param name="n">The n.</param>
            <param name="k">The k.</param>
            <returns>n! / (k! * (n - k)!)</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.InverseSqrtFast(System.Single)">
            <summary>
            Returns an approximation of the inverse square root of left number.
            </summary>
            <param name="x">A number.</param>
            <returns>An approximation of the inverse square root of the specified number, with an upper error bound of 0.001</returns>
            <remarks>
            This is an improved implementation of the the method known as Carmack's inverse square root
            which is found in the Quake III source code. This implementation comes from
            http://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see
            http://www.beyond3d.com/content/articles/8/
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.M.InverseSqrtFast(System.Double)">
            <summary>
            Returns an approximation of the inverse square root of left number.
            </summary>
            <param name="x">A number.</param>
            <returns>An approximation of the inverse square root of the specified number, with an upper error bound of 0.001</returns>
            <remarks>
            This is an improved implementation of the the method known as Carmack's inverse square root
            which is found in the Quake III source code. This implementation comes from
            http://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see
            http://www.beyond3d.com/content/articles/8/
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.M.DegreesToRadians(System.Single)">
            <summary>
            Convert degrees to radians
            </summary>
            <param name="degrees">An angle in degrees</param>
            <returns>The angle expressed in radians</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.RadiansToDegrees(System.Single)">
            <summary>
            Convert radians to degrees
            </summary>
            <param name="radians">An angle in radians</param>
            <returns>The angle expressed in degrees</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.MinAngle(System.Single)">
            <summary>
            Wrap-around to keep angle in the interval of (-PI , +PI]
            </summary>
            <param name="angle">The angle to minimize.</param>
            <returns>The angle limited to a maximum magnitude of PI.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.MinAngle(System.Double)">
            <summary>
            Wrap-around to keep angle in the interval of (-PI , +PI]
            </summary>
            <param name="angle">The angle to minimize.</param>
            <returns>The angle limited to a maximum magnitude of PI.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Float4ToABGR(Fusee.Math.Core.float4)">
            <summary>
            Converts a float4 to an ABGR value (Int64).
            </summary>
            <param name="value">The float4 to convert.</param>
            <returns>The ABGR value.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Swap(System.Double@,System.Double@)">
            <summary>
            Swaps two double values.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
        </member>
        <member name="M:Fusee.Math.Core.M.Swap(System.Single@,System.Single@)">
            <summary>
            Swaps two float values.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
        </member>
        <member name="M:Fusee.Math.Core.M.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamp a value to the given minimum and maximum vectors.
            </summary>
            <param name="val">Input value</param>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <returns>
            The clamped value.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Clamp a value to the given minimum and maximum vectors.
            </summary>
            <param name="val">Input value.</param>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>
            The clamped value.
            </returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Equals(System.Double,System.Double)">
            <summary>
            Compares two double values for equality.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <returns>True if the numbers are equal.</returns>
        </member>
        <member name="M:Fusee.Math.Core.M.Equals(System.Single,System.Single)">
            <summary>
            Compares two float values for equality.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <returns>True if the numbers are equal.</returns>
        </member>
        <member name="T:Fusee.Math.Core.MathHelper">
            <summary>
            DEPRECATED!!!! Use <see cref="T:Fusee.Math.Core.M"/> instead.
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.MathHelper.PiOver4">
            <summary>
            DEPRECATED!!!! Use <see cref="F:Fusee.Math.Core.M.PiOver4"/> instead.
            </summary>
        </member>
        <member name="T:Fusee.Math.Core.QuaternionD">
            <summary>
                Represents a QuaternionD (double precision).
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.#ctor(Fusee.Math.Core.double3,System.Double)">
            <summary>
                Construct a new QuaternionD from vector and w components
            </summary>
            <param name="v">The vector part</param>
            <param name="w">The w part</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Construct a new QuaternionD
            </summary>
            <param name="xx">The xx component</param>
            <param name="yy">The yy component</param>
            <param name="zz">The zz component</param>
            <param name="w">The w component</param>
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.xyz">
            <summary>
                Gets or sets an Fusee.Math.double3 with the x, y and z components of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.x">
            <summary>
                Gets or sets the x component of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.y">
            <summary>
                Gets or sets the y component of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.z">
            <summary>
                Gets or sets the z component of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.w">
            <summary>
                Gets or sets the w component of this instance.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.ToAxisAngle(Fusee.Math.Core.double3@,System.Double@)">
            <summary>
                Convert the current QuaternionD to axis angle representation
            </summary>
            <param name="axis">The resultant axis</param>
            <param name="angle">The resultant angle</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.ToAxisAngle">
            <summary>
                Convert this instance to an axis-angle representation.
            </summary>
            <returns>A double4 that is the axis-angle representation of this QuaternionD.</returns>
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.Length">
            <summary>
                Gets the length (magnitude) of the QuaternionD.
            </summary>
            <seealso cref="P:Fusee.Math.Core.QuaternionD.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.QuaternionD.LengthSquared">
            <summary>
                Gets the square of the QuaternionD length (magnitude).
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Normalize">
            <summary>
                Scales the QuaternionD to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Conjugate">
            <summary>
                Convert this QuaternionD to its conjugate
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.QuaternionD.Identity">
            <summary>
                Defines the identity QuaternionD.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Add(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Add two QuaternionDs
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>The result of the addition</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Add(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Add two QuaternionDs
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <param name="result">The result of the addition</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Sub(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Subtracts two instances.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Sub(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Subtracts two instances.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Mult(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Mult(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD@,System.Double,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternionD">The instance.</param>
            <param name="scale">The scalar.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,System.Double)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternionD">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Conjugate(Fusee.Math.Core.QuaternionD)">
            <summary>
                Get the conjugate of the given QuaternionD
            </summary>
            <param name="q">The QuaternionD</param>
            <returns>The conjugate of the given QuaternionD</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Conjugate(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Get the conjugate of the given QuaternionD
            </summary>
            <param name="q">The QuaternionD</param>
            <param name="result">The conjugate of the given QuaternionD</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Invert(Fusee.Math.Core.QuaternionD)">
            <summary>
                Get the inverse of the given QuaternionD
            </summary>
            <param name="q">The QuaternionD to invert</param>
            <returns>The inverse of the given QuaternionD</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Invert(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Get the inverse of the given QuaternionD
            </summary>
            <param name="q">The QuaternionD to invert</param>
            <param name="result">The inverse of the given QuaternionD</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Normalize(Fusee.Math.Core.QuaternionD)">
            <summary>
                Scale the given QuaternionD to unit length
            </summary>
            <param name="q">The QuaternionD to normalize</param>
            <returns>The normalized QuaternionD</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Normalize(Fusee.Math.Core.QuaternionD@,Fusee.Math.Core.QuaternionD@)">
            <summary>
                Scale the given QuaternionD to unit length
            </summary>
            <param name="q">The QuaternionD to normalize</param>
            <param name="result">The normalized QuaternionD</param>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.FromAxisAngle(Fusee.Math.Core.double3,System.Double)">
            <summary>
                Build a QuaternionD from the given axis and angle
            </summary>
            <param name="axis">The axis to rotate about</param>
            <param name="angle">The rotation angle in radians</param>
            <returns>A QuaternionD that represents the orientation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Slerp(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD,System.Double)">
            <summary>
                Do Spherical linear interpolation between two QuaternionDs
            </summary>
            <param name="q1">The first QuaternionD</param>
            <param name="q2">The second QuaternionD</param>
            <param name="blend">The blend factor</param>
            <returns>A smooth blend between the given QuaternionDs</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Addition(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Subtraction(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,System.Double)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternionD">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Multiply(System.Double,Fusee.Math.Core.QuaternionD)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternionD">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Equality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.op_Inequality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)">
            <summary>
                Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.ToString">
            <summary>
                Returns a System.String that represents the current QuaternionD.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Equals(System.Object)">
            <summary>
                Compares this object instance to another object for equality.
            </summary>
            <param name="other">The other object to be used in the comparison.</param>
            <returns>True if both objects are QuaternionDs of equal value. Otherwise it returns false.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.GetHashCode">
            <summary>
                Provides the hash code for this object.
            </summary>
            <returns>A hash code formed from the bitwise XOR of this objects members.</returns>
        </member>
        <member name="M:Fusee.Math.Core.QuaternionD.Equals(Fusee.Math.Core.QuaternionD)">
            <summary>
                Compares this QuaternionD instance to another QuaternionD for equality.
            </summary>
            <param name="other">The other QuaternionD to be used in the comparison.</param>
            <returns>True if both instances are equal; false otherwise.</returns>
        </member>
        <member name="T:Fusee.Math.Core.Quaternion">
            <summary>
                Represents a Quaternion (single precision).
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.#ctor(Fusee.Math.Core.float3,System.Single)">
            <summary>
                Construct a new Quaternion from vector and w components
            </summary>
            <param name="v">The vector part</param>
            <param name="w">The w part</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct a new Quaternion
            </summary>
            <param name="xx">The xx component</param>
            <param name="yy">The yy component</param>
            <param name="zz">The zz component</param>
            <param name="w">The w component</param>
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.xyz">
            <summary>
                Gets or sets an Fusee.Math.float3 with the x, y and z components of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.x">
            <summary>
                Gets or sets the x component of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.y">
            <summary>
                Gets or sets the y component of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.z">
            <summary>
                Gets or sets the z component of this instance.
            </summary>
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.w">
            <summary>
                Gets or sets the w component of this instance.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.ToAxisAngle(Fusee.Math.Core.float3@,System.Single@)">
            <summary>
                Convert the current quaternion to axis angle representation
            </summary>
            <param name="axis">The resultant axis</param>
            <param name="angle">The resultant angle</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.ToAxisAngle">
            <summary>
                Convert this instance to an axis-angle representation.
            </summary>
            <returns>A float4 that is the axis-angle representation of this quaternion.</returns>
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.Length">
            <summary>
                Gets the length (magnitude) of the quaternion.
            </summary>
            <seealso cref="P:Fusee.Math.Core.Quaternion.LengthSquared" />
        </member>
        <member name="P:Fusee.Math.Core.Quaternion.LengthSquared">
            <summary>
                Gets the square of the quaternion length (magnitude).
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Normalize">
            <summary>
                Scales the Quaternion to unit length.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Conjugate">
            <summary>
                Convert this quaternion to its conjugate
            </summary>
        </member>
        <member name="F:Fusee.Math.Core.Quaternion.Identity">
            <summary>
                Defines the identity quaternion.
            </summary>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Add(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Add two quaternions
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>The result of the addition</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Add(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Add two quaternions
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <param name="result">The result of the addition</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Sub(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Subtracts two instances.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Sub(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Subtracts two instances.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Mult(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Mult(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion@,System.Single,Fusee.Math.Core.Quaternion@)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,System.Single)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Conjugate(Fusee.Math.Core.Quaternion)">
            <summary>
                Get the conjugate of the given quaternion
            </summary>
            <param name="q">The quaternion</param>
            <returns>The conjugate of the given quaternion</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Conjugate(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Get the conjugate of the given quaternion
            </summary>
            <param name="q">The quaternion</param>
            <param name="result">The conjugate of the given quaternion</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Invert(Fusee.Math.Core.Quaternion)">
            <summary>
                Get the inverse of the given quaternion
            </summary>
            <param name="q">The quaternion to invert</param>
            <returns>The inverse of the given quaternion</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Invert(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Get the inverse of the given quaternion
            </summary>
            <param name="q">The quaternion to invert</param>
            <param name="result">The inverse of the given quaternion</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Normalize(Fusee.Math.Core.Quaternion)">
            <summary>
                Scale the given quaternion to unit length
            </summary>
            <param name="q">The quaternion to normalize</param>
            <returns>The normalized quaternion</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Normalize(Fusee.Math.Core.Quaternion@,Fusee.Math.Core.Quaternion@)">
            <summary>
                Scale the given quaternion to unit length
            </summary>
            <param name="q">The quaternion to normalize</param>
            <param name="result">The normalized quaternion</param>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.FromAxisAngle(Fusee.Math.Core.float3,System.Single)">
            <summary>
                Build a quaternion from the given axis and angle
            </summary>
            <param name="axis">The axis to rotate about</param>
            <param name="angle">The rotation angle in radians</param>
            <returns>A normalized quaternion rotation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Slerp(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion,System.Single)">
            <summary>
                Do Spherical linear interpolation between two quaternions
            </summary>
            <param name="q1">The first quaternion</param>
            <param name="q2">The second quaternion</param>
            <param name="blend">The blend factor</param>
            <returns>A smooth blend between the given quaternions</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.EulerToQuaternion(Fusee.Math.Core.float3,System.Boolean)">
            <summary>
                Convert Euler angle to Quaternion rotation.
            </summary>
            <param name="e">Euler angle to convert.</param>
            <param name="inDegrees">Whether the angles are in degrees or radians.</param>
            <returns>A Quaternion representing the euler angle passed to this method.</returns>
            <remarks>The euler angle is assumed to be in common aviation order where the y axis is up. Thus x is pitch/attitude, 
            y is yaw/heading, and z is roll/bank. In practice x is never out of [-PI/2, PI/2] while y and z may well be in
            the range of [-PI, PI].
            
            See also <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm">the euclideanspace website</a>.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.QuaternionToEuler(Fusee.Math.Core.Quaternion,System.Boolean)">
            <summary>
                Convert Quaternion rotation to Euler Angles.
            </summary>
            <param name="q">Quaternion rotation to convert.</param>
            <param name="inDegrees">Whether the angles shall be in degrees or radians.</param>
            <remarks>The euler angle is assumed to be in common aviation order where the y axis is up. Thus x is pitch/attitude, 
            y is yaw/heading, and z is roll/bank. In practice x is never out of [-PI/2, PI/2] while y and z may well be in
            the range of [-PI, PI].
            
            See also <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm">the euclideanspace website</a>.
            </remarks>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.LookRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
                Takes a float4x4 matric and returns quaternions.
            </summary>
            <param name="lookAt">The look at.</param>
            <param name="upDirection">Up direction.</param>
            <returns>A Quaternion.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.QuaternionToMatrix(Fusee.Math.Core.Quaternion)">
            <summary>
                Convert Quaternion to rotation matrix
            </summary>
            <param name="q">Quaternion to convert.</param>
            <returns>A matrix of type float4x4 from the passed Quaternion.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.CopySign(System.Single,System.Single)">
            <summary>
                a with the algebraic sign of b.
            </summary>
            <remarks>
                Takes a as an absolute value and multiplies it with: +1 for any positiv number for b, -1 for any negative
                number for b or 0 for 0 for b.
            </remarks>
            <param name="a">Absolut value</param>
            <param name="b">A positiv/negativ number or zero.</param>
            <returns>Returns a with the algebraic sign of b.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Addition(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Subtraction(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,System.Single)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Multiply(System.Single,Fusee.Math.Core.Quaternion)">
            <summary>
                Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Equality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.op_Inequality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)">
            <summary>
                Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.ToString">
            <summary>
                Returns a System.String that represents the current Quaternion.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Equals(System.Object)">
            <summary>
                Compares this object instance to another object for equality.
            </summary>
            <param name="other">The other object to be used in the comparison.</param>
            <returns>True if both objects are Quaternions of equal value. Otherwise it returns false.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.GetHashCode">
            <summary>
                Provides the hash code for this object.
            </summary>
            <returns>A hash code formed from the bitwise XOR of this objects members.</returns>
        </member>
        <member name="M:Fusee.Math.Core.Quaternion.Equals(Fusee.Math.Core.Quaternion)">
            <summary>
                Compares this Quaternion instance to another Quaternion for equality.
            </summary>
            <param name="other">The other Quaternion to be used in the comparison.</param>
            <returns>True if both instances are equal; false otherwise.</returns>
        </member>
    </members>
</doc>
